/* @autogenerated */
package net.civeira.phylax.common.value;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Locale;
import java.util.function.Function;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

class YamlLocaleMessagesUnitTest {

  @Test
  void test() {
    YamlLocaleMessages locale = YamlLocaleMessages.load("/messages/errors", Locale.getDefault());
    Assertions.assertTrue(locale.contains("c1.code"));
    Assertions.assertEquals("001", locale.get("c1.code"));
    Assertions.assertFalse(locale.keys("c1").isEmpty());
  }

  @Test
  void without_country() {
    YamlLocaleMessages locale = YamlLocaleMessages.load("/messages/errors", Locale.ENGLISH);
    Assertions.assertTrue(locale.contains("c1.code"));
    Assertions.assertEquals("001", locale.get("c1.code"));
    Assertions.assertFalse(locale.keys("c1").isEmpty());
  }

  @Test
  public void testLoadFileIOException() {
    YamlLocaleMessagesWithError yamlLocaleMessagesWithError = new YamlLocaleMessagesWithError(
        "/messages/errors", Locale.getDefault(), path -> new ByteArrayError("# empty".getBytes()));
    Assertions.assertFalse(yamlLocaleMessagesWithError.contains("c1"));
    Assertions.assertTrue(yamlLocaleMessagesWithError.keys("").isEmpty());
    Assertions.assertEquals("c1.code", yamlLocaleMessagesWithError.get("c1.code"));
  }
}


class YamlLocaleMessagesWithError extends YamlLocaleMessages {

  YamlLocaleMessagesWithError(String name, Locale locale, Function<String, InputStream> provider) {
    super(name, locale, provider);
  }
}


class ByteArrayError extends ByteArrayInputStream {

  public ByteArrayError(byte[] buf) {
    super(buf);
  }

  @Override
  public void close() throws IOException {
    throw new IOException("Test IOException");
  }

}
