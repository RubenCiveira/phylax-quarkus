/* @autogenerated */
package net.civeira.phylax.common.value.validation.validators;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class PostalCodeValidatorUnitTest {

  @Test
  void shouldValidateValidPostalCode() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertTrue(validator.validate("12345").isValid()); // Valid postal code
  }

  @Test
  void shouldInvalidatePostalCodeWithLetters() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertFalse(validator.validate("12A45").isValid()); // Contains letters
  }

  @Test
  void shouldInvalidatePostalCodeTooShort() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertFalse(validator.validate("1234").isValid()); // Less than 5 digits
  }

  @Test
  void shouldInvalidatePostalCodeTooLong() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertFalse(validator.validate("123456").isValid()); // More than 5 digits
  }

  @Test
  void shouldInvalidatePostalCodeWithSpecialCharacters() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertFalse(validator.validate("12-45").isValid()); // Contains special character '-'
    assertFalse(validator.validate("12 45").isValid()); // Contains space
  }

  @Test
  void shouldInvalidateEmptyPostalCode() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertFalse(validator.validate("").isValid()); // Empty string
  }

  @Test
  void shouldInvalidateNullPostalCode() {
    PostalCodeValidator validator = new PostalCodeValidator("Error");
    assertFalse(validator.validate(null).isValid()); // Null input
  }
}
