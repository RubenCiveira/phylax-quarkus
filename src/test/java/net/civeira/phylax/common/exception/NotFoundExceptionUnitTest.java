/* @autogenerated */
package net.civeira.phylax.common.exception;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class NotFoundExceptionUnitTest {

  @Test
  void testDefaultConstructor() {
    NotFoundException exception = new NotFoundException();

    assertNull(exception.getMessage());
    assertNull(exception.getCause());
  }

  @Test
  void testConstructorWithMessage() {
    String message = "Resource not found";
    NotFoundException exception = new NotFoundException(message);

    assertEquals(message, exception.getMessage());
    assertNull(exception.getCause());
  }

  @Test
  void testConstructorWithCause() {
    Throwable cause = new RuntimeException("Underlying cause");
    NotFoundException exception = new NotFoundException(cause);

    assertEquals(cause, exception.getCause());
    // getMessage() should return cause.toString() by default
    assertEquals(cause.toString(), exception.getMessage());
  }

  @Test
  void testConstructorWithMessageAndCause() {
    String message = "Unable to locate the user";
    Throwable cause = new IllegalStateException("User ID invalid");
    NotFoundException exception = new NotFoundException(message, cause);

    assertEquals(message, exception.getMessage());
    assertEquals(cause, exception.getCause());
  }

  @Test
  void testExceptionIsInstanceOfRuntimeException() {
    NotFoundException exception = new NotFoundException("test");
    assertTrue(exception instanceof RuntimeException);
  }

  @Test
  void testThrowAndCatch() {
    assertThrows(NotFoundException.class, () -> {
      throw new NotFoundException("Missing entity");
    });
  }
}
