/* @autogenerated */
package net.civeira.phylax.common.exception;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class PaymentRequiredExceptionUnitTest {

  @Test
  void testDefaultConstructor() {
    PaymentRequiredException exception = new PaymentRequiredException();

    assertNull(exception.getMessage());
    assertNull(exception.getCause());
  }

  @Test
  void testConstructorWithMessage() {
    String message = "Payment is required to access this feature.";
    PaymentRequiredException exception = new PaymentRequiredException(message);

    assertEquals(message, exception.getMessage());
    assertNull(exception.getCause());
  }

  @Test
  void testConstructorWithCause() {
    Throwable cause = new RuntimeException("Billing system not reachable");
    PaymentRequiredException exception = new PaymentRequiredException(cause);

    assertEquals(cause, exception.getCause());
    assertEquals(cause.toString(), exception.getMessage());
  }

  @Test
  void testConstructorWithMessageAndCause() {
    String message = "User must upgrade to continue";
    Throwable cause = new IllegalStateException("Subscription expired");
    PaymentRequiredException exception = new PaymentRequiredException(message, cause);

    assertEquals(message, exception.getMessage());
    assertEquals(cause, exception.getCause());
  }

  @Test
  void testIsInstanceOfRuntimeException() {
    PaymentRequiredException exception = new PaymentRequiredException("test");
    assertTrue(exception instanceof RuntimeException);
  }

  @Test
  void testThrowAndCatch() {
    assertThrows(PaymentRequiredException.class, () -> {
      throw new PaymentRequiredException("Billing required");
    });
  }
}
