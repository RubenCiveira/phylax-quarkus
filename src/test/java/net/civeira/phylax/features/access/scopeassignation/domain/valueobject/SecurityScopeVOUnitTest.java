package net.civeira.phylax.features.access.scopeassignation.domain.valueobject;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import net.civeira.phylax.common.exception.ConstraintException;
import net.civeira.phylax.common.value.validation.ConstraintFailList;
import net.civeira.phylax.features.access.securityscope.domain.SecurityScopeReference;

class SecurityScopeVOUnitTest {

  /**
   * @autogenerated ValueObjectGenerator
   */
  @Test
  @DisplayName("Test value object contruction for property security scope of scope assignation ")
  void test_security_scope_v_o_builder() {
    ConstraintFailList fails = new ConstraintFailList();
    Assertions.assertEquals("10", SecurityScopeVO.fromReference("10").getSecurityScopeUid(),
        "The builder must store the reference value");
    Assertions.assertEquals("11", SecurityScopeVO.tryFromReference("11").getSecurityScopeUid(),
        "The builder must store the reference value");
    Assertions.assertEquals("12",
        SecurityScopeVO.tryFromReference("12", fails).getSecurityScopeUid(),
        "The builder must store the reference value");
    Assertions.assertTrue(fails.isEmpty());
    Assertions.assertThrows(ConstraintException.class, () -> SecurityScopeVO.tryFrom(null));
    Assertions.assertEquals(SecurityScopeReference.of("one"),
        SecurityScopeVO.from(SecurityScopeReference.of("one")).getSecurityScope());
    Assertions.assertThrows(ConstraintException.class,
        () -> SecurityScopeVO.tryFrom(new Object() {}));
    Assertions.assertEquals("[" + SecurityScopeReference.of("one") + "]",
        SecurityScopeVO.from(SecurityScopeReference.of("one")).toString());
  }
}
