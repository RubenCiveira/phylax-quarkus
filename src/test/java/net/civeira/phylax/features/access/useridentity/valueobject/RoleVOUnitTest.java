package net.civeira.phylax.features.access.useridentity.valueobject;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import net.civeira.phylax.common.exception.ConstraintException;
import net.civeira.phylax.common.value.validation.ConstraintFailList;
import net.civeira.phylax.features.access.role.RoleReference;

class RoleVOUnitTest {

  /**
   * @autogenerated ValueObjectGenerator
   */
  @Test
  @DisplayName("Test value object contruction for property role of user identity role ")
  void test_role_v_o_builder() {
    ConstraintFailList fails = new ConstraintFailList();
    Assertions.assertEquals("10", RoleVO.fromReference("10").getReferenceValue(),
        "The builder must store the reference value");
    Assertions.assertEquals("11", RoleVO.tryFromReference("11").getReferenceValue(),
        "The builder must store the reference value");
    Assertions.assertEquals("12", RoleVO.tryFromReference("12", fails).getReferenceValue(),
        "The builder must store the reference value");
    Assertions.assertTrue(fails.isEmpty());
    Assertions.assertThrows(ConstraintException.class, () -> RoleVO.tryFrom(null));
    Assertions.assertEquals(RoleReference.of("one"),
        RoleVO.from(RoleReference.of("one")).getValue());
    Assertions.assertThrows(ConstraintException.class, () -> RoleVO.tryFrom(new Object() {}));
    Assertions.assertEquals("[" + RoleReference.of("one") + "]",
        RoleVO.from(RoleReference.of("one")).toString());
  }
}
