# @autogenerated
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: 0.1.1
  contact:
    name: Ruben
  license:
    name: apache
servers:
- url: https://{host}:{port}/{basePath}
  description: The production API server
  variables:
    host:
      default: localhost
      description: this value is assigned by the service provider, in this example `gigantic-server.com`
    port:
      enum:
        - '8090'
      default: '8090'
    basePath:
      default: ''
security:
  - BearerAuth: [] # Aplica el esquema de seguridad por defecto a toda la API
tags:
  - name: role
    description: role
  - name: role-acl
    description: Access control for role
  - name: relying-party
    description: relying-party
  - name: relying-party-acl
    description: Access control for relying party
  - name: trusted-client
    description: Las diferentes aplicaciones que pueden usar el sistema de acceso. Dado qua la app va en la petici√≥n de login, podemos obtener la cuenta asociado a traves del proyecto
  - name: trusted-client-acl
    description: Access control for trusted client
  - name: user-identity
    description: user-identity
  - name: user-identity-acl
    description: Access control for user identity
  - name: tenant-config
    description: Holds configuration options specific to a tenant. This includes visual customization and login security settings like MFA enforcement.
  - name: tenant-config-acl
    description: Access control for tenant config
  - name: security-domain
    description: A security domain is a set of allow over security scopes. Each security domain mark what an user can do over diferente applications of the stack.
  - name: security-domain-acl
    description: Access control for security domain
  - name: login-provider
    description: Represents a login identity provider (e.g., Google, GitHub, SAML) configured for a tenant. Enables federated authentication integration.
  - name: login-provider-acl
    description: Access control for login provider
  - name: tenant-terms-of-use
    description: Defines legal or informational documents (Terms of Use) that users must accept to use services within a tenant's scope.
  - name: tenant-terms-of-use-acl
    description: Access control for tenant terms of use
  - name: scope-assignation
    description: Witch scopes are assigned to the security domain
  - name: scope-assignation-acl
    description: Access control for scope assignation
  - name: user
    description: user
  - name: user-acl
    description: Access control for user
  - name: tenant
    description: Represents a tenant or account in the system. Each tenant defines an isolated scope for users and applications, with optional access to global resources or restricted visibility. Tenants allow multi-tenancy features in the platform.
  - name: tenant-acl
    description: Access control for tenant
  - name: security-scope
    description: each of the allow scopes for the application.
  - name: security-scope-acl
    description: Access control for security scope

paths:
  /api/access/roles:
    get:
      tags:
        - role
      summary: List of role
      operationId: role-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-name
          in: query
          description: Order by name asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleApiDtoList'
    post:
      tags:
        - role
      summary: Create a new role
      operationId: role-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleApiDto'
    delete:
      tags:
        - role
      summary: Delete a colection of role by filter
      operationId: role-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/roles/{uid}:
    get:
      tags:
        - role
      summary: Retrive on  role by their uid
      operationId: role-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - role
      summary: Update a role by their uid
      operationId: role-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - role
      summary: Delete a  role by their uid
      operationId: role-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/roles/~/delete-status/{uid}:
    get:
      tags:
        - role
      summary: Query the result of an massive delete
      operationId: role-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/me/acl/access/roles:
    get:
      tags:
        - role-acl
      summary: Check for allow permissions for the current user on role
      operationId: role-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGenericAcl'
  /api/me/acl/access/roles/{uid}:
    get:
      tags:
        - role-acl
      summary: Check for allow permissions for the current user on role by their uid
      operationId: role-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/relying-parties:
    get:
      tags:
        - relying-party
      summary: List of relying party
      operationId: relying-party-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: api-key
          in: query
          description: api key
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-code
          in: query
          description: Order by code asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyApiDtoList'
    post:
      tags:
        - relying-party
      summary: Create a new relying party
      operationId: relying-party-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelyingPartyApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyApiDto'
    delete:
      tags:
        - relying-party
      summary: Delete a colection of relying party by filter
      operationId: relying-party-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: api-key
          in: query
          description: api key
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/relying-parties/{uid}:
    get:
      tags:
        - relying-party
      summary: Retrive on  relying party by their uid
      operationId: relying-party-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - relying-party
      summary: Update a relying party by their uid
      operationId: relying-party-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelyingPartyApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - relying-party
      summary: Delete a  relying party by their uid
      operationId: relying-party-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/relying-parties/~/delete-status/{uid}:
    get:
      tags:
        - relying-party
      summary: Query the result of an massive delete
      operationId: relying-party-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/relying-parties/{uid}/enable:
    patch:
      tags:
        - relying-party
      summary: Update a relying party by their uid
      operationId: relying-party-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyApiDto'
        '404':
          description: The item dont exists
  /api/access/relying-parties/{uid}/disable:
    patch:
      tags:
        - relying-party
      summary: Update a relying party by their uid
      operationId: relying-party-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/relying-parties:
    get:
      tags:
        - relying-party-acl
      summary: Check for allow permissions for the current user on relying party
      operationId: relying-party-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartyGenericAcl'
  /api/me/acl/access/relying-parties/{uid}:
    get:
      tags:
        - relying-party-acl
      summary: Check for allow permissions for the current user on relying party by their uid
      operationId: relying-party-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelyingPartySpecificAcl'
        '404':
          description: The item dont exists
  /api/access/relying-parties/~/enable/:
    patch:
      tags:
        - relying-party
      summary: enable a colection of relying party by filter
      operationId: relying-party-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: api-key
          in: query
          description: api key
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/relying-parties/~/enable-status/{uid}:
    get:
      tags:
        - relying-party
      summary: Query the result of an massive delete
      operationId: relying-party-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/relying-parties/~/disable/:
    patch:
      tags:
        - relying-party
      summary: disable a colection of relying party by filter
      operationId: relying-party-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: api-key
          in: query
          description: api key
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/relying-parties/~/disable-status/{uid}:
    get:
      tags:
        - relying-party
      summary: Query the result of an massive delete
      operationId: relying-party-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/trusted-clients:
    get:
      tags:
        - trusted-client
      summary: List of trusted client
      operationId: trusted-client-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-code
          in: query
          description: Order by code asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientApiDtoList'
    post:
      tags:
        - trusted-client
      summary: Create a new trusted client
      operationId: trusted-client-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedClientApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientApiDto'
    delete:
      tags:
        - trusted-client
      summary: Delete a colection of trusted client by filter
      operationId: trusted-client-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/trusted-clients/{uid}:
    get:
      tags:
        - trusted-client
      summary: Retrive on  trusted client by their uid
      operationId: trusted-client-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - trusted-client
      summary: Update a trusted client by their uid
      operationId: trusted-client-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedClientApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - trusted-client
      summary: Delete a  trusted client by their uid
      operationId: trusted-client-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/trusted-clients/~/delete-status/{uid}:
    get:
      tags:
        - trusted-client
      summary: Query the result of an massive delete
      operationId: trusted-client-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/trusted-clients/{uid}/enable:
    patch:
      tags:
        - trusted-client
      summary: Update a trusted client by their uid
      operationId: trusted-client-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientApiDto'
        '404':
          description: The item dont exists
  /api/access/trusted-clients/{uid}/disable:
    patch:
      tags:
        - trusted-client
      summary: Update a trusted client by their uid
      operationId: trusted-client-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/trusted-clients:
    get:
      tags:
        - trusted-client-acl
      summary: Check for allow permissions for the current user on trusted client
      operationId: trusted-client-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientGenericAcl'
  /api/me/acl/access/trusted-clients/{uid}:
    get:
      tags:
        - trusted-client-acl
      summary: Check for allow permissions for the current user on trusted client by their uid
      operationId: trusted-client-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedClientSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/trusted-clients/~/enable/:
    patch:
      tags:
        - trusted-client
      summary: enable a colection of trusted client by filter
      operationId: trusted-client-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/trusted-clients/~/enable-status/{uid}:
    get:
      tags:
        - trusted-client
      summary: Query the result of an massive delete
      operationId: trusted-client-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/trusted-clients/~/disable/:
    patch:
      tags:
        - trusted-client
      summary: disable a colection of trusted client by filter
      operationId: trusted-client-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/trusted-clients/~/disable-status/{uid}:
    get:
      tags:
        - trusted-client
      summary: Query the result of an massive delete
      operationId: trusted-client-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/user-identities:
    get:
      tags:
        - user-identity
      summary: List of user identity
      operationId: user-identity-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: user
          in: query
          description: user
          required: false
          schema:
            type: string
        - name: users
          in: query
          description: users
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: relying-party
          in: query
          description: relying party
          required: false
          schema:
            type: string
        - name: relying-partys
          in: query
          description: relying partys
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: trusted-client
          in: query
          description: trusted client
          required: false
          schema:
            type: string
        - name: trusted-clients
          in: query
          description: trusted clients
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityApiDtoList'
    post:
      tags:
        - user-identity
      summary: Create a new user identity
      operationId: user-identity-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityApiDto'
    delete:
      tags:
        - user-identity
      summary: Delete a colection of user identity by filter
      operationId: user-identity-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: user
          in: query
          description: user
          required: false
          schema:
            type: string
        - name: users
          in: query
          description: users
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: relying-party
          in: query
          description: relying party
          required: false
          schema:
            type: string
        - name: relying-partys
          in: query
          description: relying partys
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: trusted-client
          in: query
          description: trusted client
          required: false
          schema:
            type: string
        - name: trusted-clients
          in: query
          description: trusted clients
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/user-identities/{uid}:
    get:
      tags:
        - user-identity
      summary: Retrive on  user identity by their uid
      operationId: user-identity-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - user-identity
      summary: Update a user identity by their uid
      operationId: user-identity-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - user-identity
      summary: Delete a  user identity by their uid
      operationId: user-identity-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/user-identities/~/delete-status/{uid}:
    get:
      tags:
        - user-identity
      summary: Query the result of an massive delete
      operationId: user-identity-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/me/acl/access/user-identities:
    get:
      tags:
        - user-identity-acl
      summary: Check for allow permissions for the current user on user identity
      operationId: user-identity-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityGenericAcl'
  /api/me/acl/access/user-identities/{uid}:
    get:
      tags:
        - user-identity-acl
      summary: Check for allow permissions for the current user on user identity by their uid
      operationId: user-identity-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentitySpecificAcl'
        '404':
          description: The item dont exists
  /api/access/tenants-config:
    get:
      tags:
        - tenant-config
      summary: List of tenant config
      operationId: tenant-config-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigApiDtoList'
    post:
      tags:
        - tenant-config
      summary: Create a new tenant config
      operationId: tenant-config-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantConfigApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigApiDto'
    delete:
      tags:
        - tenant-config
      summary: Delete a colection of tenant config by filter
      operationId: tenant-config-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/tenants-config/{uid}:
    get:
      tags:
        - tenant-config
      summary: Retrive on  tenant config by their uid
      operationId: tenant-config-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - tenant-config
      summary: Update a tenant config by their uid
      operationId: tenant-config-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantConfigApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - tenant-config
      summary: Delete a  tenant config by their uid
      operationId: tenant-config-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/tenants-config/~/delete-status/{uid}:
    get:
      tags:
        - tenant-config
      summary: Query the result of an massive delete
      operationId: tenant-config-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/me/acl/access/tenants-config:
    get:
      tags:
        - tenant-config-acl
      summary: Check for allow permissions for the current user on tenant config
      operationId: tenant-config-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigGenericAcl'
  /api/me/acl/access/tenants-config/{uid}:
    get:
      tags:
        - tenant-config-acl
      summary: Check for allow permissions for the current user on tenant config by their uid
      operationId: tenant-config-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/security-domains:
    get:
      tags:
        - security-domain
      summary: List of security domain
      operationId: security-domain-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          description: enabled
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-name
          in: query
          description: Order by name asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainApiDtoList'
    post:
      tags:
        - security-domain
      summary: Create a new security domain
      operationId: security-domain-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityDomainApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainApiDto'
    delete:
      tags:
        - security-domain
      summary: Delete a colection of security domain by filter
      operationId: security-domain-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          description: enabled
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/security-domains/{uid}:
    get:
      tags:
        - security-domain
      summary: Retrive on  security domain by their uid
      operationId: security-domain-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - security-domain
      summary: Update a security domain by their uid
      operationId: security-domain-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityDomainApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - security-domain
      summary: Delete a  security domain by their uid
      operationId: security-domain-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/security-domains/~/delete-status/{uid}:
    get:
      tags:
        - security-domain
      summary: Query the result of an massive delete
      operationId: security-domain-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/security-domains/{uid}/enable:
    patch:
      tags:
        - security-domain
      summary: Update a security domain by their uid
      operationId: security-domain-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainApiDto'
        '404':
          description: The item dont exists
  /api/access/security-domains/{uid}/disable:
    patch:
      tags:
        - security-domain
      summary: Update a security domain by their uid
      operationId: security-domain-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/security-domains:
    get:
      tags:
        - security-domain-acl
      summary: Check for allow permissions for the current user on security domain
      operationId: security-domain-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainGenericAcl'
  /api/me/acl/access/security-domains/{uid}:
    get:
      tags:
        - security-domain-acl
      summary: Check for allow permissions for the current user on security domain by their uid
      operationId: security-domain-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDomainSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/security-domains/~/enable/:
    patch:
      tags:
        - security-domain
      summary: enable a colection of security domain by filter
      operationId: security-domain-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          description: enabled
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/security-domains/~/enable-status/{uid}:
    get:
      tags:
        - security-domain
      summary: Query the result of an massive delete
      operationId: security-domain-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/security-domains/~/disable/:
    patch:
      tags:
        - security-domain
      summary: disable a colection of security domain by filter
      operationId: security-domain-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          description: enabled
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/security-domains/~/disable-status/{uid}:
    get:
      tags:
        - security-domain
      summary: Query the result of an massive delete
      operationId: security-domain-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/login-providers:
    get:
      tags:
        - login-provider
      summary: List of login provider
      operationId: login-provider-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-name
          in: query
          description: Order by name asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderApiDtoList'
    post:
      tags:
        - login-provider
      summary: Create a new login provider
      operationId: login-provider-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginProviderApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderApiDto'
    delete:
      tags:
        - login-provider
      summary: Delete a colection of login provider by filter
      operationId: login-provider-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/login-providers/{uid}:
    get:
      tags:
        - login-provider
      summary: Retrive on  login provider by their uid
      operationId: login-provider-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - login-provider
      summary: Update a login provider by their uid
      operationId: login-provider-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginProviderApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - login-provider
      summary: Delete a  login provider by their uid
      operationId: login-provider-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/login-providers/~/delete-status/{uid}:
    get:
      tags:
        - login-provider
      summary: Query the result of an massive delete
      operationId: login-provider-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/login-providers/{uid}/enable:
    patch:
      tags:
        - login-provider
      summary: Update a login provider by their uid
      operationId: login-provider-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderApiDto'
        '404':
          description: The item dont exists
  /api/access/login-providers/{uid}/disable:
    patch:
      tags:
        - login-provider
      summary: Update a login provider by their uid
      operationId: login-provider-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/login-providers:
    get:
      tags:
        - login-provider-acl
      summary: Check for allow permissions for the current user on login provider
      operationId: login-provider-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderGenericAcl'
  /api/me/acl/access/login-providers/{uid}:
    get:
      tags:
        - login-provider-acl
      summary: Check for allow permissions for the current user on login provider by their uid
      operationId: login-provider-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginProviderSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/login-providers/{uid}/metadata:
    get:
      tags:
        - login-provider
      summary: Retrieve binary content for metadata of login provider
      operationId: login-provider-api-retrieve-metadata
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/access/login-providers/-/temp-metadata:
    get:
      tags:
        - login-provider
      summary: Retrieve binary content of a temporal upload for metadata of login provider
      operationId: login-provider-api-retrieve-temp-upload-metadata
      parameters:
        - name: temp
          in: query
          description: The temp code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      tags:
        - login-provider
      summary: Retrieve binary content of a temporal upload for metadata of login provider
      operationId: login-provider-api-upload-temp-upload-metadata
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload
                fileName:
                  type: string
                  description: The file name
                fileType:
                  type: string
                  description: The content type
              required:
                - file
      responses:
        '200':
          description: File uploaded successfully
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid input or missing file
  /api/access/login-providers/~/enable/:
    patch:
      tags:
        - login-provider
      summary: enable a colection of login provider by filter
      operationId: login-provider-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/login-providers/~/enable-status/{uid}:
    get:
      tags:
        - login-provider
      summary: Query the result of an massive delete
      operationId: login-provider-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/login-providers/~/disable/:
    patch:
      tags:
        - login-provider
      summary: disable a colection of login provider by filter
      operationId: login-provider-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/login-providers/~/disable-status/{uid}:
    get:
      tags:
        - login-provider
      summary: Query the result of an massive delete
      operationId: login-provider-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/tenants-terms-of-use:
    get:
      tags:
        - tenant-terms-of-use
      summary: List of tenant terms of use
      operationId: tenant-terms-of-use-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantTermsOfUseApiDtoList'
    post:
      tags:
        - tenant-terms-of-use
      summary: Create a new tenant terms of use
      operationId: tenant-terms-of-use-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantTermsOfUseApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantTermsOfUseApiDto'
    delete:
      tags:
        - tenant-terms-of-use
      summary: Delete a colection of tenant terms of use by filter
      operationId: tenant-terms-of-use-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/tenants-terms-of-use/{uid}:
    get:
      tags:
        - tenant-terms-of-use
      summary: Retrive on  tenant terms of use by their uid
      operationId: tenant-terms-of-use-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantTermsOfUseApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - tenant-terms-of-use
      summary: Update a tenant terms of use by their uid
      operationId: tenant-terms-of-use-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantTermsOfUseApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantTermsOfUseApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - tenant-terms-of-use
      summary: Delete a  tenant terms of use by their uid
      operationId: tenant-terms-of-use-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/tenants-terms-of-use/~/delete-status/{uid}:
    get:
      tags:
        - tenant-terms-of-use
      summary: Query the result of an massive delete
      operationId: tenant-terms-of-use-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/me/acl/access/tenants-terms-of-use:
    get:
      tags:
        - tenant-terms-of-use-acl
      summary: Check for allow permissions for the current user on tenant terms of use
      operationId: tenant-terms-of-use-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantTermsOfUseGenericAcl'
  /api/me/acl/access/tenants-terms-of-use/{uid}:
    get:
      tags:
        - tenant-terms-of-use-acl
      summary: Check for allow permissions for the current user on tenant terms of use by their uid
      operationId: tenant-terms-of-use-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantTermsOfUseSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/tenants-terms-of-use/{uid}/attached:
    get:
      tags:
        - tenant-terms-of-use
      summary: Retrieve binary content for attached of tenant terms of use
      operationId: tenant-terms-of-use-api-retrieve-attached
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/access/tenants-terms-of-use/-/temp-attached:
    get:
      tags:
        - tenant-terms-of-use
      summary: Retrieve binary content of a temporal upload for attached of tenant terms of use
      operationId: tenant-terms-of-use-api-retrieve-temp-upload-attached
      parameters:
        - name: temp
          in: query
          description: The temp code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      tags:
        - tenant-terms-of-use
      summary: Retrieve binary content of a temporal upload for attached of tenant terms of use
      operationId: tenant-terms-of-use-api-upload-temp-upload-attached
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload
                fileName:
                  type: string
                  description: The file name
                fileType:
                  type: string
                  description: The content type
              required:
                - file
      responses:
        '200':
          description: File uploaded successfully
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid input or missing file
  /api/access/scope-assignations:
    get:
      tags:
        - scope-assignation
      summary: List of scope assignation
      operationId: scope-assignation-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: security-domain
          in: query
          description: security domain
          required: false
          schema:
            type: string
        - name: security-domains
          in: query
          description: security domains
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: security-scope
          in: query
          description: security scope
          required: false
          schema:
            type: string
        - name: security-scopes
          in: query
          description: security scopes
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignationApiDtoList'
    post:
      tags:
        - scope-assignation
      summary: Create a new scope assignation
      operationId: scope-assignation-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeAssignationApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignationApiDto'
    delete:
      tags:
        - scope-assignation
      summary: Delete a colection of scope assignation by filter
      operationId: scope-assignation-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: security-domain
          in: query
          description: security domain
          required: false
          schema:
            type: string
        - name: security-domains
          in: query
          description: security domains
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: security-scope
          in: query
          description: security scope
          required: false
          schema:
            type: string
        - name: security-scopes
          in: query
          description: security scopes
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/scope-assignations/{uid}:
    get:
      tags:
        - scope-assignation
      summary: Retrive on  scope assignation by their uid
      operationId: scope-assignation-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignationApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - scope-assignation
      summary: Update a scope assignation by their uid
      operationId: scope-assignation-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeAssignationApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignationApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - scope-assignation
      summary: Delete a  scope assignation by their uid
      operationId: scope-assignation-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/scope-assignations/~/delete-status/{uid}:
    get:
      tags:
        - scope-assignation
      summary: Query the result of an massive delete
      operationId: scope-assignation-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/me/acl/access/scope-assignations:
    get:
      tags:
        - scope-assignation-acl
      summary: Check for allow permissions for the current user on scope assignation
      operationId: scope-assignation-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignationGenericAcl'
  /api/me/acl/access/scope-assignations/{uid}:
    get:
      tags:
        - scope-assignation-acl
      summary: Check for allow permissions for the current user on scope assignation by their uid
      operationId: scope-assignation-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeAssignationSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/users:
    get:
      tags:
        - user
      summary: List of user
      operationId: user-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: root
          in: query
          description: root
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-name
          in: query
          description: Order by name asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDtoList'
    post:
      tags:
        - user
      summary: Create a new user
      operationId: user-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDto'
    delete:
      tags:
        - user
      summary: Delete a colection of user by filter
      operationId: user-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: root
          in: query
          description: root
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/users/{uid}:
    get:
      tags:
        - user
      summary: Retrive on  user by their uid
      operationId: user-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - user
      summary: Update a user by their uid
      operationId: user-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - user
      summary: Delete a  user by their uid
      operationId: user-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/users/~/delete-status/{uid}:
    get:
      tags:
        - user
      summary: Query the result of an massive delete
      operationId: user-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/users/{uid}/disable:
    patch:
      tags:
        - user
      summary: Update a user by their uid
      operationId: user-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDto'
        '404':
          description: The item dont exists
  /api/access/users/{uid}/enable:
    patch:
      tags:
        - user
      summary: Update a user by their uid
      operationId: user-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDto'
        '404':
          description: The item dont exists
  /api/access/users/{uid}/unlock:
    patch:
      tags:
        - user
      summary: Update a user by their uid
      operationId: user-api-unlock
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/users:
    get:
      tags:
        - user-acl
      summary: Check for allow permissions for the current user on user
      operationId: user-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGenericAcl'
  /api/me/acl/access/users/{uid}:
    get:
      tags:
        - user-acl
      summary: Check for allow permissions for the current user on user by their uid
      operationId: user-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/users/~/disable/:
    patch:
      tags:
        - user
      summary: disable a colection of user by filter
      operationId: user-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: root
          in: query
          description: root
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/users/~/disable-status/{uid}:
    get:
      tags:
        - user
      summary: Query the result of an massive delete
      operationId: user-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/users/~/enable/:
    patch:
      tags:
        - user
      summary: enable a colection of user by filter
      operationId: user-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: root
          in: query
          description: root
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/users/~/enable-status/{uid}:
    get:
      tags:
        - user
      summary: Query the result of an massive delete
      operationId: user-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/users/~/unlock/:
    patch:
      tags:
        - user
      summary: unlock a colection of user by filter
      operationId: user-api-batch-unlock
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: root
          in: query
          description: root
          required: false
          schema:
            type: boolean
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: tenant
          required: false
          schema:
            type: string
        - name: tenants
          in: query
          description: tenants
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/users/~/unlock-status/{uid}:
    get:
      tags:
        - user
      summary: Query the result of an massive delete
      operationId: user-api-batch-unlock-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/tenants:
    get:
      tags:
        - tenant
      summary: List of tenant
      operationId: tenant-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
        - name: since-name
          in: query
          description: Order by name asc
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: The result order information
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApiDtoList'
    post:
      tags:
        - tenant
      summary: Create a new tenant
      operationId: tenant-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApiDto'
    delete:
      tags:
        - tenant
      summary: Delete a colection of tenant by filter
      operationId: tenant-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/tenants/{uid}:
    get:
      tags:
        - tenant
      summary: Retrive on  tenant by their uid
      operationId: tenant-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - tenant
      summary: Update a tenant by their uid
      operationId: tenant-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - tenant
      summary: Delete a  tenant by their uid
      operationId: tenant-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/tenants/~/delete-status/{uid}:
    get:
      tags:
        - tenant
      summary: Query the result of an massive delete
      operationId: tenant-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/tenants/{uid}/enable:
    patch:
      tags:
        - tenant
      summary: Update a tenant by their uid
      operationId: tenant-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApiDto'
        '404':
          description: The item dont exists
  /api/access/tenants/{uid}/disable:
    patch:
      tags:
        - tenant
      summary: Update a tenant by their uid
      operationId: tenant-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/tenants:
    get:
      tags:
        - tenant-acl
      summary: Check for allow permissions for the current user on tenant
      operationId: tenant-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantGenericAcl'
  /api/me/acl/access/tenants/{uid}:
    get:
      tags:
        - tenant-acl
      summary: Check for allow permissions for the current user on tenant by their uid
      operationId: tenant-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/tenants/~/enable/:
    patch:
      tags:
        - tenant
      summary: enable a colection of tenant by filter
      operationId: tenant-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/tenants/~/enable-status/{uid}:
    get:
      tags:
        - tenant
      summary: Query the result of an massive delete
      operationId: tenant-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/tenants/~/disable/:
    patch:
      tags:
        - tenant
      summary: disable a colection of tenant by filter
      operationId: tenant-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/tenants/~/disable-status/{uid}:
    get:
      tags:
        - tenant
      summary: Query the result of an massive delete
      operationId: tenant-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/security-scopes:
    get:
      tags:
        - security-scope
      summary: List of security scope
      operationId: security-scope-api-list
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: resource
          in: query
          description: resource
          required: false
          schema:
            type: string
        - name: trusted-client
          in: query
          description: trusted client
          required: false
          schema:
            type: string
        - name: trusted-clients
          in: query
          description: trusted clients
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: relying-party
          in: query
          description: relying party
          required: false
          schema:
            type: string
        - name: relying-partys
          in: query
          description: relying partys
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: limit
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: integer
        - name: since-uid
          in: query
          description: The maximun number of results
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeApiDtoList'
    post:
      tags:
        - security-scope
      summary: Create a new security scope
      operationId: security-scope-api-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityScopeApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeApiDto'
    delete:
      tags:
        - security-scope
      summary: Delete a colection of security scope by filter
      operationId: security-scope-api-batch-delete
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: resource
          in: query
          description: resource
          required: false
          schema:
            type: string
        - name: trusted-client
          in: query
          description: trusted client
          required: false
          schema:
            type: string
        - name: trusted-clients
          in: query
          description: trusted clients
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: relying-party
          in: query
          description: relying party
          required: false
          schema:
            type: string
        - name: relying-partys
          in: query
          description: relying partys
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/security-scopes/{uid}:
    get:
      tags:
        - security-scope
      summary: Retrive on  security scope by their uid
      operationId: security-scope-api-retrieve
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeApiDto'
        '404':
          description: The item dont exists
    put:
      tags:
        - security-scope
      summary: Update a security scope by their uid
      operationId: security-scope-api-update
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityScopeApiDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeApiDto'
        '404':
          description: The item dont exists
    delete:
      tags:
        - security-scope
      summary: Delete a  security scope by their uid
      operationId: security-scope-api-delete
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: The item dont exists
  /api/access/security-scopes/~/delete-status/{uid}:
    get:
      tags:
        - security-scope
      summary: Query the result of an massive delete
      operationId: security-scope-api-batch-delete-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/security-scopes/{uid}/disable:
    patch:
      tags:
        - security-scope
      summary: Update a security scope by their uid
      operationId: security-scope-api-disable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeApiDto'
        '404':
          description: The item dont exists
  /api/access/security-scopes/{uid}/enable:
    patch:
      tags:
        - security-scope
      summary: Update a security scope by their uid
      operationId: security-scope-api-enable
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeApiDto'
        '404':
          description: The item dont exists
  /api/me/acl/access/security-scopes:
    get:
      tags:
        - security-scope-acl
      summary: Check for allow permissions for the current user on security scope
      operationId: security-scope-api-generic-acl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeGenericAcl'
  /api/me/acl/access/security-scopes/{uid}:
    get:
      tags:
        - security-scope-acl
      summary: Check for allow permissions for the current user on security scope by their uid
      operationId: security-scope-api-contextual-acl
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScopeSpecificAcl'
        '404':
          description: The item dont exists
  /api/access/security-scopes/~/disable/:
    patch:
      tags:
        - security-scope
      summary: disable a colection of security scope by filter
      operationId: security-scope-api-batch-disable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: resource
          in: query
          description: resource
          required: false
          schema:
            type: string
        - name: trusted-client
          in: query
          description: trusted client
          required: false
          schema:
            type: string
        - name: trusted-clients
          in: query
          description: trusted clients
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: relying-party
          in: query
          description: relying party
          required: false
          schema:
            type: string
        - name: relying-partys
          in: query
          description: relying partys
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/security-scopes/~/disable-status/{uid}:
    get:
      tags:
        - security-scope
      summary: Query the result of an massive delete
      operationId: security-scope-api-batch-disable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists
  /api/access/security-scopes/~/enable/:
    patch:
      tags:
        - security-scope
      summary: enable a colection of security scope by filter
      operationId: security-scope-api-batch-enable
      parameters:
        - name: uids
          in: query
          description: Filter by a list of ids
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: search
          in: query
          description: Textual search
          required: false
          schema:
            type: string
        - name: resource
          in: query
          description: resource
          required: false
          schema:
            type: string
        - name: trusted-client
          in: query
          description: trusted client
          required: false
          schema:
            type: string
        - name: trusted-clients
          in: query
          description: trusted clients
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
        - name: relying-party
          in: query
          description: relying party
          required: false
          schema:
            type: string
        - name: relying-partys
          in: query
          description: relying partys
          required: false
          schema:
            type: array
            items: 
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskLocalizator'
  /api/access/security-scopes/~/enable-status/{uid}:
    get:
      tags:
        - security-scope
      summary: Query the result of an massive delete
      operationId: security-scope-api-batch-enable-query
      parameters:
        - name: uid
          in: path
          description: The iten identification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTaskDetail'
        '404':
          description: The item dont exists

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Opcional, para indicar que es un JWT
  schemas:
    BatchTaskDetail:
      type: object
      properties:
        uid:
          type: string
        status:
          type: string
          enum: [PENDING, PROCESSING, FINISHED, FAILED]
    BatchTaskLocalizator:
      type: object
      properties:
        uid:
          type: string
        steps:
          type: array
          items:
            type: string
    TenantApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/tenants"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - name
    SecurityDomainApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/security-domains"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - securityDomain
    DomainsApiDto:
      type: object
      description: role-domain
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        securityDomain:
          description: El security domain de role domain
          $ref: '#/components/schemas/SecurityDomainApiRef'
        version:
          description: Campo con el n√∫mero de version de role domain para controlar bloqueos optimistas
          type: integer
          format: int32
    RoleApiDto:
      type: object
      description: role
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        name:
          description: The user name to identify on the login screen
          type: string
        tenant:
          description: Domains without a tenant could be used only for admins
          $ref: '#/components/schemas/TenantApiRef'
        domains:
          description: El domains de role
          type: array
          items:
            $ref: '#/components/schemas/DomainsApiDto'
        version:
          description: Campo con el n√∫mero de version de role para controlar bloqueos optimistas
          type: integer
          format: int32
    RoleApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/RoleApiDto'
    CommonAllow:
      type: object
      properties:
        allowed:
          type: boolean
        reason:
          type: string
    RoleGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/RoleAclGenericAllows'
        fields:
          $ref: '#/components/schemas/RoleAclFields'
    RoleSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/RoleAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/RoleAclFields'
    RoleAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - list
    RoleAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
    RoleAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    RelyingPartyApiDto:
      type: object
      description: relying-party
      properties:
        uid:
          description: El identificador de la aplicacion
          type: string
        code:
          description: El c√≥digo identificativo de la aplicaci√≥n
          type: string
        apiKey:
          description: A identification for the aplication
          type: string
        enabled:
          description: Una marca que permite quitar el acceso a una cuenta sin borrarla
          type: boolean
        version:
          description: Campo con el n√∫mero de version de relying party para controlar bloqueos optimistas
          type: integer
          format: int32
    RelyingPartyApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/RelyingPartyApiDto'
    RelyingPartyGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/RelyingPartyAclGenericAllows'
        fields:
          $ref: '#/components/schemas/RelyingPartyAclFields'
    RelyingPartySpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/RelyingPartyAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/RelyingPartyAclFields'
    RelyingPartyAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
        - list
    RelyingPartyAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
    RelyingPartyAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    TrustedClientApiDto:
      type: object
      description: Las diferentes aplicaciones que pueden usar el sistema de acceso. Dado qua la app va en la petici√≥n de login, podemos obtener la cuenta asociado a traves del proyecto
      properties:
        uid:
          description: El identificador de la aplicacion
          type: string
        code:
          description: El c√≥digo identificativo de la aplicaci√≥n
          type: string
        publicAllow:
          description: If true, users can use these client to access with public code flow
          type: boolean
        secretOauth:
          description: If the user is not delegated, the phrasse to identify
          type: string
        allowedRedirects:
          description: Si permitimos login directo de la app, obligamos a indicar un secreto.
          type: string
        enabled:
          description: Una marca que permite quitar el acceso a una cuenta sin borrarla
          type: boolean
        version:
          description: Campo con el n√∫mero de version de trusted client para controlar bloqueos optimistas
          type: integer
          format: int32
    TrustedClientApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/TrustedClientApiDto'
    TrustedClientGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TrustedClientAclGenericAllows'
        fields:
          $ref: '#/components/schemas/TrustedClientAclFields'
    TrustedClientSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TrustedClientAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/TrustedClientAclFields'
    TrustedClientAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
        - list
    TrustedClientAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
    TrustedClientAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    UserApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/users"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - user
    RelyingPartyApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/relying-parties"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - user
    TrustedClientApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/trusted-clients"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - user
    RoleApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/roles"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - role
    RolesApiDto:
      type: object
      description: user-identity-role
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        role:
          description: La cuenta a la que pertenece
          $ref: '#/components/schemas/RoleApiRef'
        version:
          description: Campo con el n√∫mero de version de user identity role para controlar bloqueos optimistas
          type: integer
          format: int32
    UserIdentityApiDto:
      type: object
      description: user-identity
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        user:
          description: El user de user identity
          $ref: '#/components/schemas/UserApiRef'
        relyingParty:
          description: El relying party de user identity
          $ref: '#/components/schemas/RelyingPartyApiRef'
        trustedClient:
          description: El trusted client de user identity
          $ref: '#/components/schemas/TrustedClientApiRef'
        roles:
          description: El roles de user identity
          type: array
          items:
            $ref: '#/components/schemas/RolesApiDto'
        version:
          description: Campo con el n√∫mero de version de user identity para controlar bloqueos optimistas
          type: integer
          format: int32
    UserIdentityApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserIdentityApiDto'
    UserIdentityGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/UserIdentityAclGenericAllows'
        fields:
          $ref: '#/components/schemas/UserIdentityAclFields'
    UserIdentitySpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/UserIdentityAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/UserIdentityAclFields'
    UserIdentityAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - list
    UserIdentityAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
    UserIdentityAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    TenantConfigApiDto:
      type: object
      description: Holds configuration options specific to a tenant. This includes visual customization and login security settings like MFA enforcement.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        tenant:
          description: The tenant this configuration applies to.
          $ref: '#/components/schemas/TenantApiRef'
        innerLabel:
          description: A customizable label that tenants can use to personalize the application UI.
          type: string
        forceMfa:
          description: Indicates if Multi-Factor Authentication (MFA) is enforced for the tenant.
          type: boolean
        version:
          description: Campo con el n√∫mero de version de tenant config para controlar bloqueos optimistas
          type: integer
          format: int32
    TenantConfigApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/TenantConfigApiDto'
    TenantConfigGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TenantConfigAclGenericAllows'
        fields:
          $ref: '#/components/schemas/TenantConfigAclFields'
    TenantConfigSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TenantConfigAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/TenantConfigAclFields'
    TenantConfigAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - list
    TenantConfigAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
    TenantConfigAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    SecurityDomainApiDto:
      type: object
      description: A security domain is a set of allow over security scopes. Each security domain mark what an user can do over diferente applications of the stack.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        name:
          description: El name de security domain
          type: string
        level:
          description: The user inherit level, and can view only domain with his level or lower
          type: integer
          format: int32
        readAll:
          description: Allow to read on every scope
          type: boolean
        writeAll:
          description: Allow to write on every scope
          type: boolean
        manageAll:
          description: Allow to write on every scope
          type: boolean
        enabled:
          description: Una marca que permite quitar el acceso a una cuenta sin borrarla
          type: boolean
        version:
          description: Campo con el n√∫mero de version de security domain para controlar bloqueos optimistas
          type: integer
          format: int32
    SecurityDomainApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/SecurityDomainApiDto'
    SecurityDomainGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/SecurityDomainAclGenericAllows'
        fields:
          $ref: '#/components/schemas/SecurityDomainAclFields'
    SecurityDomainSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/SecurityDomainAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/SecurityDomainAclFields'
    SecurityDomainAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
        - list
    SecurityDomainAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
    SecurityDomainAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    LoginProviderApiDto:
      type: object
      description: Represents a login identity provider (e.g., Google, GitHub, SAML) configured for a tenant. Enables federated authentication integration.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        tenant:
          description: The tenant this login provider is configured for.
          $ref: '#/components/schemas/TenantApiRef'
        name:
          description: A name that identifies this login provider within the tenant.
          type: string
        source:
          description: The source protocol or system used for authentication (e.g., GOOGLE, GITHUB, SAML).
          type: string
          enum: [google,github,saml]
        disabled:
          description: Indicates if this provider is currently disabled.
          type: boolean
        directAccess:
          description: If true, the system will default to this login method without requiring selection.
          type: boolean
        publicKey:
          description: A public key shared with users to interact with the identity provider.
          type: string
        privateKey:
          description: Private key used internally to validate codes returned by the identity provider.
          type: string
        certificate:
          description: The provider certificate used for signature verification, if required.
          type: string
        metadata:
          description: A metadata file required by some providers for configuration (e.g., SAML descriptor).
          type: string
        usersEnabledByDefault:
          description: Defines whether the users created with this provider are enabled by default.
          type: boolean
        version:
          description: Campo con el n√∫mero de version de login provider para controlar bloqueos optimistas
          type: integer
          format: int32
    LoginProviderApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/LoginProviderApiDto'
    LoginProviderGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/LoginProviderAclGenericAllows'
        fields:
          $ref: '#/components/schemas/LoginProviderAclFields'
    LoginProviderSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/LoginProviderAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/LoginProviderAclFields'
    LoginProviderAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
        uploadMetadata:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
        - list
        - uploadMetadata
    LoginProviderAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
    LoginProviderAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    TenantTermsOfUseApiDto:
      type: object
      description: Defines legal or informational documents (Terms of Use) that users must accept to use services within a tenant's scope.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        tenant:
          description: The tenant this Terms of Use document belongs to.
          $ref: '#/components/schemas/TenantApiRef'
        text:
          description: The content of the Terms of Use document.
          type: string
        attached:
          description: An optional file attachment (e.g., PDF or signed document).
          type: string
        activationDate:
          description: Date when the Terms of Use become active.
          type: string
          format: date-time
        version:
          description: Campo con el n√∫mero de version de tenant terms of use para controlar bloqueos optimistas
          type: integer
          format: int32
    TenantTermsOfUseApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/TenantTermsOfUseApiDto'
    TenantTermsOfUseGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TenantTermsOfUseAclGenericAllows'
        fields:
          $ref: '#/components/schemas/TenantTermsOfUseAclFields'
    TenantTermsOfUseSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TenantTermsOfUseAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/TenantTermsOfUseAclFields'
    TenantTermsOfUseAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
        uploadAttached:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - list
        - uploadAttached
    TenantTermsOfUseAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
    TenantTermsOfUseAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    SecurityScopeApiRef:
      type: object
      properties:
        $ref:
          type: string
          x-relationship:
            url: "/api/access/security-scopes"
            method: "GET"
            reference: "uid"
            batch-query-param: "uids"
      required:
        - uid
        - securityDomain
        - securityScope
    ScopeAssignationApiDto:
      type: object
      description: Witch scopes are assigned to the security domain
      properties:
        uid:
          description: El uid de scope assignation
          type: string
        securityDomain:
          description: El security domain de scope assignation
          $ref: '#/components/schemas/SecurityDomainApiRef'
        securityScope:
          description: El security scope de scope assignation
          $ref: '#/components/schemas/SecurityScopeApiRef'
        version:
          description: Campo con el n√∫mero de version de scope assignation para controlar bloqueos optimistas
          type: integer
          format: int32
    ScopeAssignationApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ScopeAssignationApiDto'
    ScopeAssignationGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/ScopeAssignationAclGenericAllows'
        fields:
          $ref: '#/components/schemas/ScopeAssignationAclFields'
    ScopeAssignationSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/ScopeAssignationAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/ScopeAssignationAclFields'
    ScopeAssignationAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - list
    ScopeAssignationAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
    ScopeAssignationAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    UserApiDto:
      type: object
      description: user
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        tenant:
          description: Los usuarios que no tienen tenant son roots del sistema
          $ref: '#/components/schemas/TenantApiRef'
        name:
          description: The user name to identify on the login screen
          type: string
        password:
          description: If the user is not delegated, the phrasse to identify
          type: string
        email:
          description: An optional email used to send notifications to the user
          type: string
        enabled:
          description: A disabled user cant login on the system. On his login attempts, he will recive a specific warn of his disabled account.
          type: boolean
        temporalPassword:
          description: El temporal password de user
          type: boolean
        useSecondFactors:
          description: If is true, the user has a otp to force mfa on login
          type: boolean
        secondFactorSeed:
          description: the seed used to the otp login
          type: string
        blockedUntil:
          description: A bloqued user cant login on the system, until these date. On his login attempst, hue will recive a generic not allowed message.
          type: string
          format: date-time
        language:
          description: El language de user
          type: string
        provider:
          description: Si se identific√≥ con un proveedor, se marca con cual (aunque el provedor cambie luego)
          type: string
        version:
          description: Campo con el n√∫mero de version de user para controlar bloqueos optimistas
          type: integer
          format: int32
    UserApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserApiDto'
    UserGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/UserAclGenericAllows'
        fields:
          $ref: '#/components/schemas/UserAclFields'
    UserSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/UserAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/UserAclFields'
    UserAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        unlock:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - disable
        - enable
        - unlock
        - list
    UserAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        unlock:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - disable
        - enable
        - unlock
    UserAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    TrustedClientsApiDto:
      type: object
      description: Links a tenant with a trusted OAuth client application. This configuration allows the client to bypass user consent or participate in sensitive flows securely, under tenant control.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        trustedClient:
          description: Reference to the OAuth client application trusted by this tenant.
          $ref: '#/components/schemas/TrustedClientApiRef'
        version:
          description: Campo con el n√∫mero de version de tenant trusted client para controlar bloqueos optimistas
          type: integer
          format: int32
    RelingPartiesApiDto:
      type: object
      description: Associates a tenant with a relying party (such as an application or service) in the access control model. This relationship defines which services are available to users within a specific tenant.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        relyingParty:
          description: Reference to the external service or application (relying party) linked to the tenant.
          $ref: '#/components/schemas/RelyingPartyApiRef'
        version:
          description: Campo con el n√∫mero de version de tenant relying party para controlar bloqueos optimistas
          type: integer
          format: int32
    TenantApiDto:
      type: object
      description: Represents a tenant or account in the system. Each tenant defines an isolated scope for users and applications, with optional access to global resources or restricted visibility. Tenants allow multi-tenancy features in the platform.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        name:
          description: The name to identify the account.
          type: string
        domain:
          description: A domain suffix to identify the account
          type: string
        enabled:
          description: The users of a non enabled tenant could not make login on the system
          type: boolean
        accessToAllApplications:
          description: Defines if users from this tenant can access all parties and clients, or only those explicitly assigned.
          type: boolean
        trustedClients:
          description: A list of OAuth clients marked as trusted for this tenant.
          type: array
          items:
            $ref: '#/components/schemas/TrustedClientsApiDto'
        relingParties:
          description: A list of relying parties (services or applications) associated with this tenant.
          type: array
          items:
            $ref: '#/components/schemas/RelingPartiesApiDto'
        version:
          description: Campo con el n√∫mero de version de tenant para controlar bloqueos optimistas
          type: integer
          format: int32
    TenantApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/TenantApiDto'
    TenantGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TenantAclGenericAllows'
        fields:
          $ref: '#/components/schemas/TenantAclFields'
    TenantSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/TenantAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/TenantAclFields'
    TenantAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
        - list
    TenantAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - enable
        - disable
    TenantAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string
    SecurityScopeApiDto:
      type: object
      description: each of the allow scopes for the application.
      properties:
        uid:
          description: A uid string to identify the entity
          type: string
        trustedClient:
          description: El trusted client de security scope
          $ref: '#/components/schemas/TrustedClientApiRef'
        relyingParty:
          description: El relying party de security scope
          $ref: '#/components/schemas/RelyingPartyApiRef'
        resource:
          description: A label group key to show the scope
          type: string
        scope:
          description: A label to show the scope
          type: string
        enabled:
          description: El enabled de security scope
          type: boolean
        kind:
          description: El kind de security scope
          type: string
          enum: [read,write,manage]
        visibility:
          description: El visibility de security scope
          type: string
          enum: [public,authorized,explicit]
        version:
          description: Campo con el n√∫mero de version de security scope para controlar bloqueos optimistas
          type: integer
          format: int32
    SecurityScopeApiDtoList:
      type: object
      properties:
        self:
          type: string
        first:
          type: string
        next:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/SecurityScopeApiDto'
    SecurityScopeGenericAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/SecurityScopeAclGenericAllows'
        fields:
          $ref: '#/components/schemas/SecurityScopeAclFields'
    SecurityScopeSpecificAcl:
      type: object
      properties:
        allows:
          $ref: '#/components/schemas/SecurityScopeAclSpecificAllows'
        fields:
          $ref: '#/components/schemas/SecurityScopeAclFields'
    SecurityScopeAclGenericAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
        list:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - disable
        - enable
        - list
    SecurityScopeAclSpecificAllows:
      type: object
      properties:
        retrieve:
          $ref: '#/components/schemas/CommonAllow'
        create:
          $ref: '#/components/schemas/CommonAllow'
        update:
          $ref: '#/components/schemas/CommonAllow'
        delete:
          $ref: '#/components/schemas/CommonAllow'
        disable:
          $ref: '#/components/schemas/CommonAllow'
        enable:
          $ref: '#/components/schemas/CommonAllow'
      required:
        - retrieve
        - create
        - update
        - delete
        - disable
        - enable
    SecurityScopeAclFields:
      type: object
      properties:
        noEditables:
          type: array
          items:
            type: string
        noVisibles:
          type: array
          items:
            type: string

