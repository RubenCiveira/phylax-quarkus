/* @autogenerated */
package net.civeira.phylax.bootstrap.security.analyzers;

import java.util.regex.Pattern;

import jakarta.enterprise.context.ApplicationScoped;
import net.civeira.phylax.bootstrap.security.MaliciousInjectionRiskAnalizer;

@ApplicationScoped
public class HttpHeaderInjectionAnalyzer implements MaliciousInjectionRiskAnalizer {
  private static final Pattern HTML_TAG_WITH_JS_EVENT =
      Pattern.compile("(?i)<\\w+\\b[^>]*\\bon[a-z]+\\s*=", Pattern.CASE_INSENSITIVE);
  private static final Pattern JAVASCRIPT_PROTOCOL = Pattern.compile("(?i)\\bjavascript:");
  private static final Pattern URL_ENCODED_XSS = Pattern.compile("(?i)(%3C|%3E)");

  @Override
  public int analyze(String input) {
    int riskScore = 0;
    if (HTML_TAG_WITH_JS_EVENT.matcher(input).find()) {
      riskScore += 3;
    }
    if (JAVASCRIPT_PROTOCOL.matcher(input).find()) {
      riskScore += 3;
    }
    if (URL_ENCODED_XSS.matcher(input).find()) {
      riskScore += 3;
    }
    return riskScore;
  }
}
