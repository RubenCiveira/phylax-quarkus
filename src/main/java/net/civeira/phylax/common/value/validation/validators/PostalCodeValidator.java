/* @autogenerated */
package net.civeira.phylax.common.value.validation.validators;

import net.civeira.phylax.common.value.validation.ValidationResult;
import net.civeira.phylax.common.value.validation.Validator;

/**
 * Validates postal codes ensuring they follow a fixed-length numeric format.
 * 
 * <p>
 * This validator checks if a postal code:
 * <ul>
 * <li>Is exactly 5 characters long.</li>
 * <li>Contains only numeric digits.</li>
 * <li>Is not null or empty.</li>
 * </ul>
 * If any of these conditions are not met, a validation error is returned.
 */
public class PostalCodeValidator implements Validator<String> {
  private final String errorMessage;

  /**
   * Constructs a {@code PostalCodeValidator} with a custom error message.
   *
   * @param errorMessage The error message to return if validation fails.
   */
  public PostalCodeValidator(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  /**
   * Validates a given postal code based on length and numeric constraints.
   *
   * @param postalCode The postal code to validate.
   * @return A {@code ValidationResult} indicating success or failure.
   */
  @Override
  public ValidationResult validate(String postalCode) {
    if (postalCode == null || postalCode.isEmpty()) {
      return new ValidationResult(errorMessage);
    }
    if (postalCode.length() != 5) {
      return new ValidationResult(errorMessage);
    }
    for (char c : postalCode.toCharArray()) {
      if (!Character.isDigit(c)) {
        return new ValidationResult(errorMessage);
      }
    }
    return new ValidationResult();
  }
}
