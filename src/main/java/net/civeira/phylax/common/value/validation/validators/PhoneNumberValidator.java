/* @autogenerated */
package net.civeira.phylax.common.value.validation.validators;

import java.util.regex.Pattern;

import net.civeira.phylax.common.value.validation.ValidationResult;
import net.civeira.phylax.common.value.validation.Validator;

/**
 * Validates a phone number to ensure it contains only digits and has a length between 10 and 15
 * characters.
 */
public class PhoneNumberValidator implements Validator<String> {

  private final String errorMessage;

  /**
   * Constructs a PhoneNumberValidator with a specified error message.
   *
   * @param errorMessage The error message returned when validation fails.
   */
  public PhoneNumberValidator(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  /**
   * Validates a phone number to ensure it meets the required format. The phone number must consist
   * of only digits and be between 10 and 15 characters long.
   *
   * @param phoneNumber The phone number to validate.
   * @return A {@link ValidationResult} indicating whether the phone number is valid.
   */
  @Override
  public ValidationResult validate(String phoneNumber) {
    final Pattern phonePattern = Pattern.compile("^\\d{10,15}$");

    // Check if phone number is null or empty
    if (phoneNumber == null || phoneNumber.isEmpty()) {
      return new ValidationResult(errorMessage);
    }

    // Check if phone number matches the defined pattern
    if (!phonePattern.matcher(phoneNumber).matches()) {
      return new ValidationResult(errorMessage);
    }

    // If all conditions are met, return a successful validation result
    return new ValidationResult();
  }
}
