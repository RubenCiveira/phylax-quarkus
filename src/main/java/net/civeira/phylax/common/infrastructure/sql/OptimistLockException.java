/* @autogenerated */
package net.civeira.phylax.common.infrastructure.sql;

/**
 * Exception thrown when an optimistic locking conflict is detected during a database operation.
 * <p>
 * This typically occurs when using optimistic concurrency control and the record being updated has
 * been modified by another transaction since it was last read.
 * </p>
 * <p>
 * This exception extends {@link RuntimeException} and is used to signal concurrent modification
 * conflicts, commonly handled at the application or service layer.
 * </p>
 */
public class OptimistLockException extends RuntimeException {

  private static final long serialVersionUID = 8518822091315061249L;

  /**
   * Constructs a new {@code OptimistLockException} with no detail message.
   */
  public OptimistLockException() {
    super();
  }

  /**
   * Constructs a new {@code OptimistLockException} with the specified detail message.
   *
   * @param msg the detail message explaining the reason for the exception
   */
  public OptimistLockException(String msg) {
    super(msg);
  }
}
