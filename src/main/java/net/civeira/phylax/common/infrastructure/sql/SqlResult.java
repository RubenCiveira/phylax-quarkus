/* @autogenerated */
package net.civeira.phylax.common.infrastructure.sql;

import java.util.List;
import java.util.Optional;

/**
 * Represents the result of executing a SQL query and provides different access patterns for
 * retrieving the result set.
 *
 * <p>
 * This interface abstracts over the data retrieval behavior and supports operations such as
 * retrieving a single result, a limited number of results, or all rows.
 *
 * @param <T> the type of the elements in the result
 */
public interface SqlResult<T> {

  /**
   * Retrieves an optional containing the first result in the result set, if available.
   *
   * @return an {@link Optional} containing the first element, or an empty Optional if no result
   *         exists
   */
  Optional<T> one();

  /**
   * Retrieves at most {@code max} elements from the result set, if present.
   *
   * @param max an {@link Optional} specifying the maximum number of elements to retrieve. If empty,
   *        all results may be returned.
   * @return a list containing up to {@code max} elements from the result
   */
  List<T> limit(Optional<Integer> max);

  /**
   * Retrieves at most {@code max} elements from the result set.
   *
   * @param max the maximum number of elements to retrieve
   * @return a list containing up to {@code max} elements from the result
   */
  List<T> limit(int max);

  /**
   * Retrieves all elements from the result set.
   *
   * @return a list containing all results
   */
  List<T> all();
}
