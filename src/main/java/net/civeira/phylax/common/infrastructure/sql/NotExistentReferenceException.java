/* @autogenerated */
package net.civeira.phylax.common.infrastructure.sql;

import java.sql.SQLException;

/**
 * Exception thrown when a database operation violates referential integrity due to referencing a
 * non-existent parent record.
 * <p>
 * This typically occurs during an INSERT or UPDATE operation where a foreign key refers to a parent
 * record that does not exist.
 * </p>
 * <p>
 * This domain-specific exception wraps a {@link SQLException} and provides clearer semantics to the
 * business layer regarding referential integrity issues.
 * </p>
 */
public class NotExistentReferenceException extends UncheckedSqlException {

  private static final long serialVersionUID = 7881855707464559727L;

  /**
   * Constructs a new {@code NotExistentReferenceException} with the specified SQL cause.
   *
   * @param ex the underlying {@link SQLException}
   */
  public NotExistentReferenceException(SQLException ex) {
    super(ex);
  }

  /**
   * Constructs a new {@code NotExistentReferenceException} with a detail message and SQL cause.
   *
   * @param msg the detail message
   * @param ex the underlying {@link SQLException}
   */
  public NotExistentReferenceException(String msg, SQLException ex) {
    super(msg, ex);
  }
}
