/* @autogenerated */
package net.civeira.phylax.common.batch;

import java.time.Instant;
import java.util.List;
import java.util.Locale;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.Builder;
import lombok.Data;
import net.civeira.phylax.common.batch.BatchProgress.GlobalStatus;

/**
 * A localized view of {@link BatchProgress} intended for user-facing APIs or UIs.
 *
 * <p>
 * Contains translated step-level results based on the provided locale.
 * </p>
 */
@Data
@Builder
@RegisterForReflection
public class LocalizedBatchProgress {
  /** Unique identifier of the batch process. */
  private final String uid;
  /** Global execution status of the batch process. */
  private final GlobalStatus status;
  /** Timestamp indicating when the batch process started. */
  private final Instant startTime;
  /**
   * Timestamp indicating when the batch process finished. Can be {@code null} if the batch is still
   * running or pending.
   */
  private final Instant endTime;
  /** Localized progress information for each individual step in the batch. */
  private final List<LocalizedBatchStepProgress> steps;

  /**
   * Converts a {@link BatchProgress} to a localized view using the specified locale.
   *
   * @param progress the original batch progress
   * @param locale the target locale for localization
   * @return a localized representation
   */
  public static LocalizedBatchProgress from(BatchProgress progress, Locale locale) {
    return LocalizedBatchProgress.builder().uid(progress.getUid()).status(progress.getStatus())
        .startTime(progress.getStartTime()).endTime(progress.getEndTime()).steps(progress.getSteps()
            .stream().map(step -> LocalizedBatchStepProgress.from(step, locale)).toList())
        .build();
  }
}
