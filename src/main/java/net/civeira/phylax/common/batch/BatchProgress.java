/* @autogenerated */
package net.civeira.phylax.common.batch;

import java.time.Instant;
import java.util.List;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.Builder;
import lombok.Data;

/**
 * Represents the global progress status of a batch execution.
 *
 * <p>
 * This class encapsulates execution metadata including the overall status, start/end timestamps,
 * and the progress of each individual step.
 * </p>
 */
@Data
@Builder
@RegisterForReflection
public class BatchProgress {
  /**
   * Enumerates the possible global execution statuses of a batch process.
   */
  public enum GlobalStatus {
    /** The batch job has not started yet. */
    PENDING,

    /** The batch job is currently in progress but not yet completed. */
    PROCESSING,

    /** The batch job has completed successfully without errors. */
    FINISHED,

    /** The batch job was aborted or ended due to an error. */
    FAILED
  }

  /** Unique identifier of the batch process. */
  private final String uid;

  /** Global status of the batch execution. */
  private final GlobalStatus status;

  /** Timestamp marking the start of execution. */
  private final Instant startTime;

  /** Timestamp marking the end of execution, if finished. */
  private final Instant endTime;

  /** List of per-step progress records. */
  private final List<BatchStepProgress> steps;
}
