/* @autogenerated */
package net.civeira.phylax.common.batch;

/**
 * Defines a contract for executing a batch processing step with support for progress tracking and
 * monitoring.
 *
 * <p>
 * Implementations of this interface are responsible for performing a unit of work in a batch job,
 * using the provided parameters and optionally reporting progress and execution state via
 * {@link BatchStepProgress} and {@link Monitor}.
 * </p>
 *
 * <p>
 * This interface is typically used within a batch processing framework where each step in the
 * workflow is executed independently, and can receive its own context and configuration.
 * </p>
 *
 * @param <T> the type of the parameter object containing configuration or context data required for
 *        execution
 */
public interface Executor<T> {

  /**
   * Executes the batch step logic.
   *
   * @param progress an object used to report progress updates and current status
   * @param t a {@link Monitor} used to observe or control the execution (e.g., for cancellation or
   *        logging)
   * @param params the configuration or context data required to execute the step
   */
  void run(BatchStepProgress progress, Monitor t, T params);
}
