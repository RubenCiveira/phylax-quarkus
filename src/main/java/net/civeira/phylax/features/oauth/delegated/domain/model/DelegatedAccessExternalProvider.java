/* @autogenerated */
package net.civeira.phylax.features.oauth.delegated.domain.model;

import java.util.Map;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.Builder;
import lombok.Data;
import net.civeira.phylax.features.oauth.authentication.domain.model.AuthRequest;

public interface DelegatedAccessExternalProvider {
  @Data
  @RegisterForReflection
  public static class RequestInfo {
    private String title;
    private String message;
    private String targetUrl;
    private Map<String, String> params;
    private boolean withPost;
    private boolean automatic = false;
  }

  @Data
  @RegisterForReflection
  public static class ResponseInfo {
    private String innerToken;
    private String title;
    private String message;

    public static ResponseInfo from(final AuthRequest request,
        DelegatedAccessExternalProvider provider, String[] code) {
      DelegatedProviderDescription info = provider.info(request);
      ResponseInfo response = new ResponseInfo();
      response.setTitle(info.getName() + " correcto");
      response.setMessage(
          "Autenticacion correcta con " + info.getName() + ", redirigimos para autenticar");
      response.setInnerToken(code[0]);
      return response;
    }
  }

  @Data
  @RegisterForReflection
  public static class TokenInfo {
    private AuthRequest request;
    private String provider;
    private String externUrl;
    private String innerToken;
  }


  @Data
  @Builder
  public static class UserData {
    private final String code;
    private final String name;
    private final String email;
  }

  RequestInfo request(AuthRequest request, DelegatedRequestDetails details);

  ResponseInfo response(AuthRequest request, DelegatedRequestDetails details,
      Map<String, String[]> params);

  UserData userInfo(AuthRequest request, DelegatedRequestDetails details, String innerToken);

  String getId(AuthRequest request);

  DelegatedProviderDescription info(AuthRequest request);
}
