package net.civeira.phylax.features.access.user.infrastructure.driver.rest;

import jakarta.enterprise.context.RequestScoped;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.user.application.usecase.retrieve.UserRetrieveProjection;
import net.civeira.phylax.features.access.user.application.usecase.retrieve.UserRetrieveUsecase;
import net.civeira.phylax.features.access.user.domain.UserReference;
import net.civeira.phylax.generated.openapi.model.TenantApiRef;
import net.civeira.phylax.generated.openapi.model.UserApiDto;

@RequiredArgsConstructor
@RequestScoped
public class UserRetrieveController {

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final UserRetrieveUsecase retrieve;

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param uid
   * @return
   */
  public Response userApiRetrieve(final String uid) {
    UserRetrieveProjection retrieved =
        retrieve.retrieve(currentRequest.interaction(), UserReference.of(uid));
    /* .header("Last-Modified", value.getSince().format(DateTimeFormatter.RFC_1123_DATE_TIME))) */
    return Response.ok(toApiModel(retrieved)).build();
  }

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param dto
   * @return
   */
  private UserApiDto toApiModel(UserRetrieveProjection dto) {
    UserApiDto userApiDto = new UserApiDto();
    userApiDto.setUid(dto.getUid());
    userApiDto.setTenant(new TenantApiRef().$ref(dto.getTenantReference()));
    userApiDto.setName(dto.getName());
    userApiDto.setPassword("*****");
    userApiDto.setEmail(dto.getEmail());
    userApiDto.setEnabled(dto.getEnabled());
    userApiDto.setTemporalPassword(dto.getTemporalPassword());
    userApiDto.setUseSecondFactors(dto.getUseSecondFactors());
    userApiDto.setSecondFactorSeed("*****");
    userApiDto.setBlockedUntil(dto.getBlockedUntil());
    userApiDto.setLanguage(dto.getLanguage());
    userApiDto.setProvider(dto.getProvider());
    userApiDto.setVersion(dto.getVersion());
    return userApiDto;
  }
}
