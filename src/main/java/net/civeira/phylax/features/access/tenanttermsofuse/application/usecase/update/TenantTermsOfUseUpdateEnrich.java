package net.civeira.phylax.features.access.tenanttermsofuse.application.usecase.update;

import java.util.Optional;
import java.util.function.UnaryOperator;

import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.With;
import net.civeira.phylax.common.security.Interaction;
import net.civeira.phylax.features.access.tenanttermsofuse.domain.TenantTermsOfUseRef;

@Data
@Builder(toBuilder = true)
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class TenantTermsOfUseUpdateEnrich {

  /**
   * @autogenerated UpdateEnrichGenerator
   */
  @NonNull
  private final Interaction interaction;

  /**
   * @autogenerated UpdateEnrichGenerator
   */
  private final TenantTermsOfUseRef reference;

  /**
   * @autogenerated UpdateEnrichGenerator
   */
  @NonNull
  private TenantTermsOfUseUpdateInput input;

  /**
   * @autogenerated UpdateEnrichGenerator
   * @return
   */
  public Optional<TenantTermsOfUseRef> getReference() {
    return Optional.ofNullable(reference);
  }

  /**
   * @autogenerated UpdateEnrichGenerator
   * @param mapper
   */
  public void map(UnaryOperator<TenantTermsOfUseUpdateInput> mapper) {
    input = mapper.apply(input);
  }
}
