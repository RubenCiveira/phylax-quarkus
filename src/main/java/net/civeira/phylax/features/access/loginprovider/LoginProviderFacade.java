package net.civeira.phylax.features.access.loginprovider;

import java.util.Set;

import jakarta.enterprise.context.ApplicationScoped;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.features.access.loginprovider.command.LoginProviderWriteAttributes;

@ApplicationScoped
@RequiredArgsConstructor
public class LoginProviderFacade {

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param attributes a filter to retrieve only matching values
   * @return The entity
   */
  public LoginProvider create(final LoginProviderWriteAttributes attributes) {
    return LoginProvider.create(attributes);
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param entity a filter to retrieve only matching values
   * @return The entity
   */
  public LoginProvider delete(final LoginProvider entity) {
    return entity.delete();
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @return The entity
   */
  public LoginProvider disable(final LoginProvider base) {
    return base.disable();
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @return The entity
   */
  public LoginProvider enable(final LoginProvider base) {
    return base.enable();
  }

  /**
   * @autogenerated AggregateFacadeGenerator
   * @return
   */
  public Set<String> readonlyFields() {
    return LoginProvider.readonlyFields();
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @param attributes a filter to retrieve only matching values
   * @return The entity
   */
  public LoginProvider update(final LoginProvider base,
      final LoginProviderWriteAttributes attributes) {
    return base.update(attributes);
  }
}
