package net.civeira.phylax.features.access.tenant.infrastructure.repository;

import java.util.Iterator;
import java.util.List;
import java.util.function.BiFunction;

import net.civeira.phylax.common.algorithms.Slider;
import net.civeira.phylax.features.access.tenant.Tenant;
import net.civeira.phylax.features.access.tenant.query.TenantCursor;
import net.civeira.phylax.features.access.tenant.query.TenantFilter;

class TenantSlider extends Slider<Tenant> {

  /**
   * @autogenerated SlideGenerator
   */
  private final TenantCursor cursor;

  /**
   * @autogenerated SlideGenerator
   */
  private final TenantFilter filter;

  /**
   * @autogenerated SlideGenerator
   */
  private final BiFunction<TenantFilter, TenantCursor, Iterator<Tenant>> gateway;

  /**
   * @autogenerated SlideGenerator
   * @param multi
   * @param limit
   * @param gateway
   * @param filter
   * @param cursor
   */
  TenantSlider(final Iterator<Tenant> multi, final int limit,
      final BiFunction<TenantFilter, TenantCursor, Iterator<Tenant>> gateway,
      final TenantFilter filter, final TenantCursor cursor) {
    super(multi, limit);
    this.gateway = gateway;
    this.filter = filter;
    this.cursor = cursor;
  }

  /**
   * @autogenerated SlideGenerator
   * @param tenants
   * @param limit
   * @return
   */
  @Override
  public Iterator<Tenant> next(List<Tenant> tenants, int limit) {
    Tenant last = tenants.get(tenants.size() - 1);
    TenantCursor cr = this.cursor.withSinceUid(last.getUid().getValue()).withLimit(limit);
    return gateway.apply(this.filter, cr);
  }
}
