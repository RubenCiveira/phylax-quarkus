package net.civeira.phylax.features.access.useridentity.infrastructure.driver.rest;

import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.UserIdentityApi;
import net.civeira.phylax.generated.openapi.model.UserIdentityApiDto;

@RequiredArgsConstructor
public class UserIdentityController implements UserIdentityApi {

  /**
   * UserIdentityApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserIdentityCreateController createController;

  /**
   * UserIdentity
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserIdentityDeleteController deleteController;

  /**
   * UserIdentity
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserIdentityListController listController;

  /**
   * UserIdentity
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserIdentityRetrieveController retrieveController;

  /**
   * UserIdentityApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserIdentityUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param user
   * @param users
   * @param relyingParty
   * @param relyingPartys
   * @param trustedClient
   * @param trustedClients
   * @return
   */
  @Override
  public Response userIdentityApiBatchDelete(final List<String> uids, final String search,
      final String user, final List<String> users, final String relyingParty,
      final List<String> relyingPartys, final String trustedClient,
      final List<String> trustedClients) {
    return deleteController.userIdentityApiBatchDelete(uids, search, user, users, relyingParty,
        relyingPartys, trustedClient, trustedClients);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response userIdentityApiBatchDeleteQuery(final String batchId) {
    return deleteController.userIdentityApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param userIdentity
   * @return
   */
  @Override
  public Response userIdentityApiCreate(UserIdentityApiDto userIdentity) {
    return createController.userIdentityApiCreate(userIdentity);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userIdentityApiDelete(final String uid) {
    return deleteController.userIdentityApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param user
   * @param users
   * @param relyingParty
   * @param relyingPartys
   * @param trustedClient
   * @param trustedClients
   * @param limit
   * @param sinceUid
   * @return
   */
  @Override
  public Response userIdentityApiList(final List<String> uids, final String search,
      final String user, final List<String> users, final String relyingParty,
      final List<String> relyingPartys, final String trustedClient,
      final List<String> trustedClients, final Integer limit, final String sinceUid) {
    return listController.userIdentityApiList(uids, search, user, users, relyingParty,
        relyingPartys, trustedClient, trustedClients, limit, sinceUid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userIdentityApiRetrieve(final String uid) {
    return retrieveController.userIdentityApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param userIdentity
   * @return
   */
  @Override
  public Response userIdentityApiUpdate(final String uid, UserIdentityApiDto userIdentity) {
    return updateController.userIdentityApiUpdate(uid, userIdentity);
  }
}
