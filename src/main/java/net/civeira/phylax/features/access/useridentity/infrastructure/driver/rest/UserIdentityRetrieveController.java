package net.civeira.phylax.features.access.useridentity.infrastructure.driver.rest;

import jakarta.enterprise.context.RequestScoped;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.useridentity.application.usecase.retrieve.UserIdentityRetrieveProjection;
import net.civeira.phylax.features.access.useridentity.application.usecase.retrieve.UserIdentityRetrieveUsecase;
import net.civeira.phylax.features.access.useridentity.domain.Roles;
import net.civeira.phylax.features.access.useridentity.domain.UserIdentityReference;
import net.civeira.phylax.generated.openapi.model.RelyingPartyApiRef;
import net.civeira.phylax.generated.openapi.model.RoleApiRef;
import net.civeira.phylax.generated.openapi.model.RolesApiDto;
import net.civeira.phylax.generated.openapi.model.TrustedClientApiRef;
import net.civeira.phylax.generated.openapi.model.UserApiRef;
import net.civeira.phylax.generated.openapi.model.UserIdentityApiDto;

@RequiredArgsConstructor
@RequestScoped
public class UserIdentityRetrieveController {

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final UserIdentityRetrieveUsecase retrieve;

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param uid
   * @return
   */
  public Response userIdentityApiRetrieve(final String uid) {
    UserIdentityRetrieveProjection retrieved =
        retrieve.retrieve(currentRequest.interaction(), UserIdentityReference.of(uid));
    /* .header("Last-Modified", value.getSince().format(DateTimeFormatter.RFC_1123_DATE_TIME))) */
    return Response.ok(toApiModel(retrieved)).build();
  }

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param dto
   * @return
   */
  private UserIdentityApiDto toApiModel(UserIdentityRetrieveProjection dto) {
    UserIdentityApiDto userIdentityApiDto = new UserIdentityApiDto();
    userIdentityApiDto.setUid(dto.getUid());
    userIdentityApiDto.setUser(new UserApiRef().$ref(dto.getUserReference()));
    userIdentityApiDto
        .setRelyingParty(new RelyingPartyApiRef().$ref(dto.getRelyingPartyReference()));
    userIdentityApiDto
        .setTrustedClient(new TrustedClientApiRef().$ref(dto.getTrustedClientReference()));
    userIdentityApiDto.setRoles(dto.getRoles().stream().map(this::toApiModelRoles).toList());
    userIdentityApiDto.setVersion(dto.getVersion());
    return userIdentityApiDto;
  }

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param dto
   * @return
   */
  private RolesApiDto toApiModelRoles(Roles dto) {
    RolesApiDto rolesApiDto = new RolesApiDto();
    rolesApiDto.setUid(dto.getUid());
    rolesApiDto.setRole(new RoleApiRef().$ref(dto.getRoleUid()));
    rolesApiDto.setVersion(dto.getVersion().orElse(null));
    return rolesApiDto;
  }
}
