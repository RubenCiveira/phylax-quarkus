package net.civeira.phylax.features.access.user.infrastructure.driver.rest;

import java.util.ArrayList;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.common.security.Allow;
import net.civeira.phylax.common.security.Interaction;
import net.civeira.phylax.features.access.user.application.usecase.create.UserCreateUsecase;
import net.civeira.phylax.features.access.user.application.usecase.delete.UserDeleteUsecase;
import net.civeira.phylax.features.access.user.application.usecase.disable.UserDisableUsecase;
import net.civeira.phylax.features.access.user.application.usecase.enable.UserEnableUsecase;
import net.civeira.phylax.features.access.user.application.usecase.list.UserListUsecase;
import net.civeira.phylax.features.access.user.application.usecase.retrieve.UserRetrieveUsecase;
import net.civeira.phylax.features.access.user.application.usecase.unlock.UserUnlockUsecase;
import net.civeira.phylax.features.access.user.application.usecase.update.UserUpdateUsecase;
import net.civeira.phylax.features.access.user.application.visibility.UsersVisibility;
import net.civeira.phylax.generated.openapi.api.UserAclApi;
import net.civeira.phylax.generated.openapi.model.CommonAllow;
import net.civeira.phylax.generated.openapi.model.UserAclFields;
import net.civeira.phylax.generated.openapi.model.UserAclGenericAllows;
import net.civeira.phylax.generated.openapi.model.UserAclSpecificAllows;
import net.civeira.phylax.generated.openapi.model.UserGenericAcl;
import net.civeira.phylax.generated.openapi.model.UserSpecificAcl;

@RequiredArgsConstructor
public class UserAclController implements UserAclApi {

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserCreateUsecase create;

  /**
   * User
   *
   * @autogenerated AclControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserDeleteUsecase delete;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserDisableUsecase disable;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserEnableUsecase enable;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserListUsecase list;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserRetrieveUsecase retrieve;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserUnlockUsecase unlock;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UserUpdateUsecase update;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UsersVisibility visibility;

  /**
   * @autogenerated AclControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userApiContextualAcl(final String uid) {
    Interaction interaction = currentRequest.interaction();
    UserSpecificAcl response = new UserSpecificAcl();
    response.setAllows(new UserAclSpecificAllows());
    response.setFields(new UserAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    disableAllows(response, interaction);
    enableAllows(response, interaction);
    unlockAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @return
   */
  @Override
  public Response userApiGenericAcl() {
    Interaction interaction = currentRequest.interaction();
    UserGenericAcl response = new UserGenericAcl();
    response.setAllows(new UserAclGenericAllows());
    response.setFields(new UserAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    listAllows(response, interaction);
    createAllows(response, interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    disableAllows(response, interaction);
    enableAllows(response, interaction);
    unlockAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void createAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = create.allow(query);
    response.getAllows()
        .setCreate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final UserSpecificAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void disableAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = disable.allow(query);
    response.getAllows()
        .setDisable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void disableAllows(final UserSpecificAcl response, final Interaction query) {
    Allow detail = disable.allow(query);
    response.getAllows()
        .setDisable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void enableAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = enable.allow(query);
    response.getAllows()
        .setEnable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void enableAllows(final UserSpecificAcl response, final Interaction query) {
    Allow detail = enable.allow(query);
    response.getAllows()
        .setEnable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void fixedFields(final UserAclFields response, final Interaction query) {
    visibility.fieldsToFix(query).forEach(field -> response.getNoEditables().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void hiddenFields(final UserAclFields response, final Interaction query) {
    visibility.fieldsToHide(query).forEach(field -> response.getNoVisibles().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void listAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = list.allow(query);
    response.getAllows()
        .setList(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final UserSpecificAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void unlockAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = unlock.allow(query);
    response.getAllows()
        .setUnlock(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void unlockAllows(final UserSpecificAcl response, final Interaction query) {
    Allow detail = unlock.allow(query);
    response.getAllows()
        .setUnlock(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final UserGenericAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final UserSpecificAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }
}
