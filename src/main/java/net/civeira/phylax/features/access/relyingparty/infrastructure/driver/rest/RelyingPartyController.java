package net.civeira.phylax.features.access.relyingparty.infrastructure.driver.rest;

import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.RelyingPartyApi;
import net.civeira.phylax.generated.openapi.model.RelyingPartyApiDto;

@RequiredArgsConstructor
public class RelyingPartyController implements RelyingPartyApi {

  /**
   * RelyingPartyApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyCreateController createController;

  /**
   * RelyingParty
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyDeleteController deleteController;

  /**
   * Disable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyDisableController disableController;

  /**
   * Enable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyEnableController enableController;

  /**
   * RelyingParty
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyListController listController;

  /**
   * RelyingParty
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyRetrieveController retrieveController;

  /**
   * RelyingPartyApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RelyingPartyUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param apiKey
   * @param code
   * @return
   */
  @Override
  public Response relyingPartyApiBatchDelete(final List<String> uids, final String search,
      final String apiKey, final String code) {
    return deleteController.relyingPartyApiBatchDelete(uids, search, apiKey, code);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response relyingPartyApiBatchDeleteQuery(final String batchId) {
    return deleteController.relyingPartyApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param apiKey
   * @param code
   * @return
   */
  @Override
  public Response relyingPartyApiBatchDisable(final List<String> uids, final String search,
      final String apiKey, final String code) {
    return disableController.relyingPartyApiBatchDisable(uids, search, apiKey, code);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response relyingPartyApiBatchDisableQuery(final String batchId) {
    return disableController.relyingPartyApiBatchDisableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param apiKey
   * @param code
   * @return
   */
  @Override
  public Response relyingPartyApiBatchEnable(final List<String> uids, final String search,
      final String apiKey, final String code) {
    return enableController.relyingPartyApiBatchEnable(uids, search, apiKey, code);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response relyingPartyApiBatchEnableQuery(final String batchId) {
    return enableController.relyingPartyApiBatchEnableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param relyingParty
   * @return
   */
  @Override
  public Response relyingPartyApiCreate(RelyingPartyApiDto relyingParty) {
    return createController.relyingPartyApiCreate(relyingParty);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response relyingPartyApiDelete(final String uid) {
    return deleteController.relyingPartyApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response relyingPartyApiDisable(final String uid) {
    return disableController.relyingPartyApiDisable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response relyingPartyApiEnable(final String uid) {
    return enableController.relyingPartyApiEnable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param apiKey
   * @param code
   * @param limit
   * @param sinceUid
   * @param sinceCode
   * @param order
   * @return
   */
  @Override
  public Response relyingPartyApiList(final List<String> uids, final String search,
      final String apiKey, final String code, final Integer limit, final String sinceUid,
      final String sinceCode, final String order) {
    return listController.relyingPartyApiList(uids, search, apiKey, code, limit, sinceUid,
        sinceCode, order);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response relyingPartyApiRetrieve(final String uid) {
    return retrieveController.relyingPartyApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param relyingParty
   * @return
   */
  @Override
  public Response relyingPartyApiUpdate(final String uid, RelyingPartyApiDto relyingParty) {
    return updateController.relyingPartyApiUpdate(uid, relyingParty);
  }
}
