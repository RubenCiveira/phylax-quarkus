package net.civeira.phylax.features.access.relyingparty.application.usecase.update;

import java.util.Optional;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import net.civeira.phylax.common.value.Uuid;
import net.civeira.phylax.features.access.relyingparty.domain.RelyingPartyChangeSet;
import net.civeira.phylax.features.access.relyingparty.domain.valueobject.ApiKeyVO;
import net.civeira.phylax.features.access.relyingparty.domain.valueobject.CodeVO;
import net.civeira.phylax.features.access.relyingparty.domain.valueobject.EnabledVO;
import net.civeira.phylax.features.access.relyingparty.domain.valueobject.UidVO;
import net.civeira.phylax.features.access.relyingparty.domain.valueobject.VersionVO;

/**
 * A dto transfer to hold relying party attribute values
 */
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class RelyingPartyUpdateInput {

  /**
   * @autogenerated UpdateInputGenerator
   */
  public static class RelyingPartyUpdateInputBuilder {

    /**
     * Append ApiKey crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param apiKey The ApiKey value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder apiKey(final String apiKey) {
      return apiKey(Optional.of(ApiKeyVO.from(apiKey)));
    }

    /**
     * Append ApiKey value
     *
     * @autogenerated UpdateInputGenerator
     * @param apiKey The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder apiKey(final Optional<ApiKeyVO> apiKey) {
      this.apiKey$value = apiKey;
      this.apiKey$set = true;
      return this;
    }

    /**
     * Append Code crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param code The Code value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder code(final String code) {
      return code(Optional.of(CodeVO.from(code)));
    }

    /**
     * Append Code value
     *
     * @autogenerated UpdateInputGenerator
     * @param code The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder code(final Optional<CodeVO> code) {
      this.code$value = code;
      this.code$set = true;
      return this;
    }

    /**
     * Append Enabled crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param enabled The Enabled value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder enabled(final Boolean enabled) {
      return enabled(Optional.of(EnabledVO.from(enabled)));
    }

    /**
     * Append Enabled value
     *
     * @autogenerated UpdateInputGenerator
     * @param enabled The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder enabled(final Optional<EnabledVO> enabled) {
      this.enabled$value = enabled;
      this.enabled$set = true;
      return this;
    }

    /**
     * @autogenerated UpdateInputGenerator
     * @return
     */
    public RelyingPartyUpdateInputBuilder newUid() {
      return version(0).uid(Uuid.comb().toString());
    }

    /**
     * Append Uid crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param uid The Uid value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder uid(final String uid) {
      return uid(Optional.of(UidVO.from(uid)));
    }

    /**
     * Append Uid value
     *
     * @autogenerated UpdateInputGenerator
     * @param uid The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder uid(final Optional<UidVO> uid) {
      this.uid$value = uid;
      this.uid$set = true;
      return this;
    }

    /**
     * Append Version crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param version The Version value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder version(final Integer version) {
      return version(Optional.of(VersionVO.from(version)));
    }

    /**
     * Append Version value
     *
     * @autogenerated UpdateInputGenerator
     * @param version The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public RelyingPartyUpdateInputBuilder version(final Optional<VersionVO> version) {
      this.version$value = version;
      this.version$set = true;
      return this;
    }
  }

  /**
   * @autogenerated UpdateInputGenerator
   * @param input
   * @return
   */
  static RelyingPartyUpdateInput fromChangeSet(final RelyingPartyChangeSet input) {
    return RelyingPartyUpdateInput.builder().uid(input.getUid()).code(input.getCode())
        .apiKey(input.getApiKey()).enabled(input.getEnabled()).version(input.getVersion()).build();
  }

  /**
   * A identification for the aplication
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<ApiKeyVO> apiKey = Optional.empty();

  /**
   * El código identificativo de la aplicación
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<CodeVO> code = Optional.empty();

  /**
   * Una marca que permite quitar el acceso a una cuenta sin borrarla
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<EnabledVO> enabled = Optional.empty();

  /**
   * El identificador de la aplicacion
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<UidVO> uid = Optional.empty();

  /**
   * Campo con el número de version de relying party para controlar bloqueos optimistas
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<VersionVO> version = Optional.empty();

  /**
   * Inform for a possible change propolsal in ApiKey
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for ApiKey, otherwise the value for ApiKey
   */
  public Optional<ApiKeyVO> getApiKey() {
    return apiKey;
  }

  /**
   * Inform for a possible change propolsal in Code
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Code, otherwise the value for Code
   */
  public Optional<CodeVO> getCode() {
    return code;
  }

  /**
   * Inform for a possible change propolsal in Enabled
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Enabled, otherwise the value for Enabled
   */
  public Optional<EnabledVO> getEnabled() {
    return enabled;
  }

  /**
   * Inform for a possible change propolsal in Uid
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Uid, otherwise the value for Uid
   */
  public Optional<UidVO> getUid() {
    return uid;
  }

  /**
   * Inform for a possible change propolsal in Version
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Version, otherwise the value for Version
   */
  public Optional<VersionVO> getVersion() {
    return version;
  }

  /**
   * Assigna change proposal for ApiKey to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for RelyingPartyUpdateInput
   * @return self instance to enable a flow code
   */
  public RelyingPartyUpdateInput setApiKey(final String value) {
    this.apiKey = Optional.of(ApiKeyVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Code to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for RelyingPartyUpdateInput
   * @return self instance to enable a flow code
   */
  public RelyingPartyUpdateInput setCode(final String value) {
    this.code = Optional.of(CodeVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Enabled to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for RelyingPartyUpdateInput
   * @return self instance to enable a flow code
   */
  public RelyingPartyUpdateInput setEnabled(final Boolean value) {
    this.enabled = Optional.of(EnabledVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Uid to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for RelyingPartyUpdateInput
   * @return self instance to enable a flow code
   */
  public RelyingPartyUpdateInput setUid(final String value) {
    this.uid = Optional.of(UidVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Version to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for RelyingPartyUpdateInput
   * @return self instance to enable a flow code
   */
  public RelyingPartyUpdateInput setVersion(final Integer value) {
    this.version = Optional.of(VersionVO.from(value));
    return this;
  }

  /**
   * @autogenerated UpdateInputGenerator
   * @return
   */
  RelyingPartyChangeSet toChangeSet() {
    return RelyingPartyChangeSet.builder().uid(uid).code(code).apiKey(apiKey).enabled(enabled)
        .version(version).build();
  }
}
