package net.civeira.phylax.features.access.tenanttermsofuse.infrastructure.driver.rest;

import java.io.InputStream;
import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.TenantTermsOfUseApi;
import net.civeira.phylax.generated.openapi.model.TenantTermsOfUseApiDto;

@RequiredArgsConstructor
public class TenantTermsOfUseController implements TenantTermsOfUseApi {

  /**
   * TenantTermsOfUse
   *
   * @autogenerated ApiControllerGenerator
   */
  private final TenantTermsOfUseAttachedUploadController attachedUploadController;

  /**
   * TenantTermsOfUseApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final TenantTermsOfUseCreateController createController;

  /**
   * TenantTermsOfUse
   *
   * @autogenerated ApiControllerGenerator
   */
  private final TenantTermsOfUseDeleteController deleteController;

  /**
   * TenantTermsOfUse
   *
   * @autogenerated ApiControllerGenerator
   */
  private final TenantTermsOfUseListController listController;

  /**
   * TenantTermsOfUse
   *
   * @autogenerated ApiControllerGenerator
   */
  private final TenantTermsOfUseRetrieveController retrieveController;

  /**
   * TenantTermsOfUseApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final TenantTermsOfUseUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param tenant
   * @param tenants
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiBatchDelete(final List<String> uids, final String search,
      final String tenant, final List<String> tenants) {
    return deleteController.tenantTermsOfUseApiBatchDelete(uids, search, tenant, tenants);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiBatchDeleteQuery(final String batchId) {
    return deleteController.tenantTermsOfUseApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param tenantTermsOfUse
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiCreate(TenantTermsOfUseApiDto tenantTermsOfUse) {
    return createController.tenantTermsOfUseApiCreate(tenantTermsOfUse);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiDelete(final String uid) {
    return deleteController.tenantTermsOfUseApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param tenant
   * @param tenants
   * @param limit
   * @param sinceUid
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiList(final List<String> uids, final String search,
      final String tenant, final List<String> tenants, final Integer limit, final String sinceUid) {
    return listController.tenantTermsOfUseApiList(uids, search, tenant, tenants, limit, sinceUid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiRetrieve(final String uid) {
    return retrieveController.tenantTermsOfUseApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiRetrieveAttached(final String uid) {
    return attachedUploadController.tenantTermsOfUseApiRetrieveAttached(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param temp
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiRetrieveTempUploadAttached(final String temp) {
    return attachedUploadController.tenantTermsOfUseApiRetrieveTempUploadAttached(temp);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param tenantTermsOfUse
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiUpdate(final String uid,
      TenantTermsOfUseApiDto tenantTermsOfUse) {
    return updateController.tenantTermsOfUseApiUpdate(uid, tenantTermsOfUse);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param file
   * @param fileName
   * @param fileType
   * @return
   */
  @Override
  public Response tenantTermsOfUseApiUploadTempUploadAttached(final InputStream file,
      final String fileName, final String fileType) {
    return attachedUploadController.tenantTermsOfUseApiUploadTempUploadAttached(file, fileName,
        fileType);
  }
}
