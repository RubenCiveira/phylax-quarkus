package net.civeira.phylax.features.access.relyingparty.application.projection;

import java.util.Optional;

import net.civeira.phylax.features.access.relyingparty.RelyingParty;

public class RelyingPartyStateProyection {

  /**
   * A identification for the aplication
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<String> apiKey = Optional.empty();

  /**
   * El código identificativo de la aplicación
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<String> code = Optional.empty();

  /**
   * Una marca que permite quitar el acceso a una cuenta sin borrarla
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<Boolean> enabled = Optional.empty();

  /**
   * El identificador de la aplicacion
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<String> uid = Optional.empty();

  /**
   * Campo con el número de version de relying party para controlar bloqueos optimistas
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<Integer> version = Optional.empty();

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param entity
   */
  public RelyingPartyStateProyection(final RelyingParty entity) {
    uid = Optional.of(entity.getUid().getValue());
    code = Optional.of(entity.getCode().getValue());
    apiKey = Optional.of(entity.getApiKey().getValue());
    enabled = entity.getEnabled().getValue();
    version = entity.getVersion().getValue();
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<String> getApiKey() {
    return apiKey;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<String> getCode() {
    return code;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<Boolean> getEnabled() {
    return enabled;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<String> getUid() {
    return uid;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<Integer> getVersion() {
    return version;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public RelyingPartyStateProyection setApiKey(final Optional<String> value) {
    this.apiKey = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public RelyingPartyStateProyection setCode(final Optional<String> value) {
    this.code = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public RelyingPartyStateProyection setEnabled(final Optional<Boolean> value) {
    this.enabled = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public RelyingPartyStateProyection setUid(final Optional<String> value) {
    this.uid = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public RelyingPartyStateProyection setVersion(final Optional<Integer> value) {
    this.version = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param field
   */
  public void unset(final String field) {
    if ("uid".equals(field)) {
      this.unsetUid();
    }
    if ("code".equals(field)) {
      this.unsetCode();
    }
    if ("apiKey".equals(field)) {
      this.unsetApiKey();
    }
    if ("enabled".equals(field)) {
      this.unsetEnabled();
    }
    if ("version".equals(field)) {
      this.unsetVersion();
    }
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public RelyingPartyStateProyection unsetApiKey() {
    this.apiKey = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public RelyingPartyStateProyection unsetCode() {
    this.code = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public RelyingPartyStateProyection unsetEnabled() {
    this.enabled = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public RelyingPartyStateProyection unsetUid() {
    this.uid = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public RelyingPartyStateProyection unsetVersion() {
    this.version = Optional.empty();
    return this;
  }
}
