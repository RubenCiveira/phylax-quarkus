package net.civeira.phylax.features.access.useridentity;

import java.util.Optional;

import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import net.civeira.phylax.common.value.Uuid;
import net.civeira.phylax.features.access.role.RoleRef;
import net.civeira.phylax.features.access.useridentity.valueobject.RoleVO;
import net.civeira.phylax.features.access.useridentity.valueobject.UidVO;
import net.civeira.phylax.features.access.useridentity.valueobject.VersionVO;

@Getter
@ToString
@Builder(toBuilder = true)
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class Roles {

  /**
   * @autogenerated UnionGenerator
   */
  public static class RolesBuilder {

    /**
     * @autogenerated UnionGenerator
     * @return
     */
    public RolesBuilder newUid() {
      version(0);
      return uid(Uuid.comb().toString());
    }

    /**
     * @autogenerated UnionGenerator
     * @param role
     * @return
     */
    public RolesBuilder role(final RoleRef role) {
      return role(RoleVO.from(role));
    }

    /**
     * @autogenerated UnionGenerator
     * @param role
     * @return
     */
    public RolesBuilder role(final RoleVO role) {
      this.role = role;
      return this;
    }

    /**
     * @autogenerated UnionGenerator
     * @param role
     * @return
     */
    public RolesBuilder role(final String role) {
      return role(RoleVO.fromReference(role));
    }

    /**
     * @autogenerated UnionGenerator
     * @param uid
     * @return
     */
    public RolesBuilder uid(final String uid) {
      return uid(UidVO.from(uid));
    }

    /**
     * @autogenerated UnionGenerator
     * @param uid
     * @return
     */
    public RolesBuilder uid(final UidVO uid) {
      this.uid = uid;
      return this;
    }

    /**
     * @autogenerated UnionGenerator
     * @param version
     * @return
     */
    public RolesBuilder version(final Integer version) {
      return version(VersionVO.from(version));
    }

    /**
     * @autogenerated UnionGenerator
     * @param version
     * @return
     */
    public RolesBuilder version(final VersionVO version) {
      this.version$value = version;
      this.version$set = true;
      return this;
    }
  }

  /**
   * La cuenta a la que pertenece
   *
   * @autogenerated UnionGenerator
   */
  @NonNull
  private RoleVO role;

  /**
   * A uid string to identify the entity
   *
   * @autogenerated UnionGenerator
   */
  @NonNull
  private UidVO uid;

  /**
   * Campo con el n√∫mero de version de user identity role para controlar bloqueos optimistas
   *
   * @autogenerated UnionGenerator
   */
  @NonNull
  @Builder.Default
  private VersionVO version = VersionVO.nullValue();

  /**
   * @autogenerated UnionGenerator
   * @return
   */
  public String getRoleReferenceValue() {
    return getRole().getReferenceValue();
  }

  /**
   * @autogenerated UnionGenerator
   * @return
   */
  public RoleRef getRoleValue() {
    return getRole().getValue();
  }

  /**
   * @autogenerated UnionGenerator
   * @return
   */
  public String getUidValue() {
    return getUid().getValue();
  }

  /**
   * @autogenerated UnionGenerator
   * @return
   */
  public Optional<Integer> getVersionValue() {
    return getVersion().getValue();
  }

  /**
   * @autogenerated UnionGenerator
   * @return
   */
  public Roles withNullVersion() {
    return withVersion(VersionVO.nullValue());
  }

  /**
   * @autogenerated UnionGenerator
   * @param role
   * @return
   */
  public Roles withRole(final RoleRef role) {
    return withRole(RoleVO.from(role));
  }

  /**
   * @autogenerated UnionGenerator
   * @param role
   * @return
   */
  public Roles withRole(final RoleVO role) {
    return toBuilder().role(role).build();
  }

  /**
   * @autogenerated UnionGenerator
   * @param role
   * @return
   */
  public Roles withRoleReferenceValue(final String role) {
    return withRole(RoleVO.fromReference(role));
  }

  /**
   * @autogenerated UnionGenerator
   * @param uid
   * @return
   */
  public Roles withUid(final String uid) {
    return withUid(UidVO.from(uid));
  }

  /**
   * @autogenerated UnionGenerator
   * @param uid
   * @return
   */
  public Roles withUid(final UidVO uid) {
    return toBuilder().uid(uid).build();
  }

  /**
   * @autogenerated UnionGenerator
   * @param version
   * @return
   */
  public Roles withVersion(final Integer version) {
    return withVersion(VersionVO.from(version));
  }

  /**
   * @autogenerated UnionGenerator
   * @param version
   * @return
   */
  public Roles withVersion(final VersionVO version) {
    return toBuilder().version(version).build();
  }
}
