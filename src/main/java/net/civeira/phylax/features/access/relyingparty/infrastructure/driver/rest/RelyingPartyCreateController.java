package net.civeira.phylax.features.access.relyingparty.infrastructure.driver.rest;

import jakarta.transaction.Transactional;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.relyingparty.application.usecase.create.RelyingPartyCreateInput;
import net.civeira.phylax.features.access.relyingparty.application.usecase.create.RelyingPartyCreateProjection;
import net.civeira.phylax.features.access.relyingparty.application.usecase.create.RelyingPartyCreateUsecase;
import net.civeira.phylax.generated.openapi.model.RelyingPartyApiDto;

@RequiredArgsConstructor
public class RelyingPartyCreateController {

  /**
   * @autogenerated CreateControllerGenerator
   */
  private final RelyingPartyCreateUsecase create;

  /**
   * @autogenerated CreateControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated CreateControllerGenerator
   * @param relyingParty
   * @return
   */
  @Transactional
  public Response relyingPartyApiCreate(RelyingPartyApiDto relyingParty) {
    RelyingPartyCreateProjection created =
        create.create(currentRequest.interaction(), toDomainModel(relyingParty));
    return Response.ok(toApiModel(created)).build();
  }

  /**
   * @autogenerated CreateControllerGenerator
   * @param dto
   * @return
   */
  private RelyingPartyApiDto toApiModel(RelyingPartyCreateProjection dto) {
    RelyingPartyApiDto relyingPartyApiDto = new RelyingPartyApiDto();
    relyingPartyApiDto.setUid(dto.getUid());
    relyingPartyApiDto.setCode(dto.getCode());
    relyingPartyApiDto.setApiKey(dto.getApiKey());
    relyingPartyApiDto.setEnabled(dto.getEnabled());
    relyingPartyApiDto.setVersion(dto.getVersion());
    return relyingPartyApiDto;
  }

  /**
   * @autogenerated CreateControllerGenerator
   * @param relyingPartyApiDto
   * @return
   */
  private RelyingPartyCreateInput toDomainModel(RelyingPartyApiDto relyingPartyApiDto) {
    RelyingPartyCreateInput dto = new RelyingPartyCreateInput();
    if (null != relyingPartyApiDto.getUid()) {
      dto.setUid(relyingPartyApiDto.getUid());
    }
    if (null != relyingPartyApiDto.getCode()) {
      dto.setCode(relyingPartyApiDto.getCode());
    }
    if (null != relyingPartyApiDto.getApiKey()) {
      dto.setApiKey(relyingPartyApiDto.getApiKey());
    }
    if (null != relyingPartyApiDto.getEnabled()) {
      dto.setEnabled(relyingPartyApiDto.getEnabled());
    }
    if (null != relyingPartyApiDto.getVersion()) {
      dto.setVersion(relyingPartyApiDto.getVersion());
    }
    return dto;
  }
}
