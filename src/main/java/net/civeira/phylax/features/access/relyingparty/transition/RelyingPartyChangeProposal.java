package net.civeira.phylax.features.access.relyingparty.transition;

import java.util.Optional;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import net.civeira.phylax.common.value.Uuid;
import net.civeira.phylax.features.access.relyingparty.RelyingParty;
import net.civeira.phylax.features.access.relyingparty.RelyingPartyReference;
import net.civeira.phylax.features.access.relyingparty.command.RelyingPartyWriteAttributes;
import net.civeira.phylax.features.access.relyingparty.valueobject.ApiKeyVO;
import net.civeira.phylax.features.access.relyingparty.valueobject.CodeVO;
import net.civeira.phylax.features.access.relyingparty.valueobject.EnabledVO;
import net.civeira.phylax.features.access.relyingparty.valueobject.UidVO;
import net.civeira.phylax.features.access.relyingparty.valueobject.VersionVO;

@NoArgsConstructor
@AllArgsConstructor
@Builder
public class RelyingPartyChangeProposal implements RelyingPartyWriteAttributes {

  /**
   * @autogenerated EntityChangeProposalGenerator
   */
  public static class RelyingPartyChangeProposalBuilder {

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param apiKey
     * @return
     */
    public RelyingPartyChangeProposalBuilder apiKey(final String apiKey) {
      return apiKey(Optional.of(ApiKeyVO.from(apiKey)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param apiKey
     * @return
     */
    public RelyingPartyChangeProposalBuilder apiKey(final Optional<ApiKeyVO> apiKey) {
      this.apiKey$value = apiKey;
      this.apiKey$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param code
     * @return
     */
    public RelyingPartyChangeProposalBuilder code(final String code) {
      return code(Optional.of(CodeVO.from(code)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param code
     * @return
     */
    public RelyingPartyChangeProposalBuilder code(final Optional<CodeVO> code) {
      this.code$value = code;
      this.code$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param enabled
     * @return
     */
    public RelyingPartyChangeProposalBuilder enabled(final Boolean enabled) {
      return enabled(Optional.of(EnabledVO.from(enabled)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param enabled
     * @return
     */
    public RelyingPartyChangeProposalBuilder enabled(final Optional<EnabledVO> enabled) {
      this.enabled$value = enabled;
      this.enabled$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @return
     */
    public RelyingPartyChangeProposalBuilder newUid() {
      return version(0).uid(Uuid.comb().toString());
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param uid
     * @return
     */
    public RelyingPartyChangeProposalBuilder uid(final String uid) {
      return uid(Optional.of(UidVO.from(uid)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param uid
     * @return
     */
    public RelyingPartyChangeProposalBuilder uid(final Optional<UidVO> uid) {
      this.uid$value = uid;
      this.uid$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param version
     * @return
     */
    public RelyingPartyChangeProposalBuilder version(final Integer version) {
      return version(Optional.of(VersionVO.from(version)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param version
     * @return
     */
    public RelyingPartyChangeProposalBuilder version(final Optional<VersionVO> version) {
      this.version$value = version;
      this.version$set = true;
      return this;
    }
  }

  /**
   * A identification for the aplication
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<ApiKeyVO> apiKey = Optional.empty();

  /**
   * El código identificativo de la aplicación
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<CodeVO> code = Optional.empty();

  /**
   * Una marca que permite quitar el acceso a una cuenta sin borrarla
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<EnabledVO> enabled = Optional.empty();

  /**
   * El identificador de la aplicacion
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<UidVO> uid = Optional.empty();

  /**
   * Campo con el número de version de relying party para controlar bloqueos optimistas
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<VersionVO> version = Optional.empty();

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param attributes
   */
  public RelyingPartyChangeProposal(final RelyingPartyWriteAttributes attributes) {
    uid = attributes.getUid();
    code = attributes.getCode();
    apiKey = attributes.getApiKey();
    enabled = attributes.getEnabled();
    version = attributes.getVersion();
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param entity
   */
  public RelyingPartyChangeProposal(final RelyingParty entity) {
    uid = Optional.of(entity.getUid());
    code = Optional.of(entity.getCode());
    apiKey = Optional.of(entity.getApiKey());
    enabled = Optional.of(entity.getEnabled());
    version = Optional.of(entity.getVersion());
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public RelyingPartyReference asReference() {
    return uid.map(UidVO::getValue).map(RelyingPartyReference::of).orElseThrow();
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<ApiKeyVO> getApiKey() {
    return apiKey;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<CodeVO> getCode() {
    return code;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<EnabledVO> getEnabled() {
    return enabled;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<UidVO> getUid() {
    return uid;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<VersionVO> getVersion() {
    return version;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public RelyingPartyChangeProposal setApiKey(final String value) {
    this.apiKey = Optional.of(ApiKeyVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public RelyingPartyChangeProposal setCode(final String value) {
    this.code = Optional.of(CodeVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public RelyingPartyChangeProposal setEnabled(final Boolean value) {
    this.enabled = Optional.of(EnabledVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public RelyingPartyChangeProposal setUid(final String value) {
    this.uid = Optional.of(UidVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public RelyingPartyChangeProposal setVersion(final Integer value) {
    this.version = Optional.of(VersionVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param field
   */
  public void unset(final String field) {
    if ("uid".equals(field)) {
      this.unsetUid();
    }
    if ("code".equals(field)) {
      this.unsetCode();
    }
    if ("apiKey".equals(field)) {
      this.unsetApiKey();
    }
    if ("enabled".equals(field)) {
      this.unsetEnabled();
    }
    if ("version".equals(field)) {
      this.unsetVersion();
    }
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public RelyingPartyChangeProposal unsetApiKey() {
    this.apiKey = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public RelyingPartyChangeProposal unsetCode() {
    this.code = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public RelyingPartyChangeProposal unsetEnabled() {
    this.enabled = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public RelyingPartyChangeProposal unsetUid() {
    this.uid = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public RelyingPartyChangeProposal unsetVersion() {
    this.version = Optional.empty();
    return this;
  }
}
