package net.civeira.phylax.features.access.tenant;

import java.util.Set;

import jakarta.enterprise.context.ApplicationScoped;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.features.access.tenant.command.TenantWriteAttributes;

@ApplicationScoped
@RequiredArgsConstructor
public class TenantFacade {

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param attributes a filter to retrieve only matching values
   * @return The entity
   */
  public Tenant create(final TenantWriteAttributes attributes) {
    return Tenant.create(attributes);
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param entity a filter to retrieve only matching values
   * @return The entity
   */
  public Tenant delete(final Tenant entity) {
    return entity.delete();
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @return The entity
   */
  public Tenant disable(final Tenant base) {
    return base.disable();
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @return The entity
   */
  public Tenant enable(final Tenant base) {
    return base.enable();
  }

  /**
   * @autogenerated AggregateFacadeGenerator
   * @return
   */
  public Set<String> readonlyFields() {
    return Tenant.readonlyFields();
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @param attributes a filter to retrieve only matching values
   * @return The entity
   */
  public Tenant update(final Tenant base, final TenantWriteAttributes attributes) {
    return base.update(attributes);
  }
}
