package net.civeira.phylax.features.access.securityscope.transition;

import java.util.Optional;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import net.civeira.phylax.common.value.Uuid;
import net.civeira.phylax.features.access.relyingparty.RelyingPartyRef;
import net.civeira.phylax.features.access.securityscope.SecurityScope;
import net.civeira.phylax.features.access.securityscope.SecurityScopeKindOptions;
import net.civeira.phylax.features.access.securityscope.SecurityScopeReference;
import net.civeira.phylax.features.access.securityscope.SecurityScopeVisibilityOptions;
import net.civeira.phylax.features.access.securityscope.command.SecurityScopeWriteAttributes;
import net.civeira.phylax.features.access.securityscope.valueobject.EnabledVO;
import net.civeira.phylax.features.access.securityscope.valueobject.KindVO;
import net.civeira.phylax.features.access.securityscope.valueobject.RelyingPartyVO;
import net.civeira.phylax.features.access.securityscope.valueobject.ResourceVO;
import net.civeira.phylax.features.access.securityscope.valueobject.ScopeVO;
import net.civeira.phylax.features.access.securityscope.valueobject.TrustedClientVO;
import net.civeira.phylax.features.access.securityscope.valueobject.UidVO;
import net.civeira.phylax.features.access.securityscope.valueobject.VersionVO;
import net.civeira.phylax.features.access.securityscope.valueobject.VisibilityVO;
import net.civeira.phylax.features.access.trustedclient.TrustedClientRef;

@NoArgsConstructor
@AllArgsConstructor
@Builder
public class SecurityScopeChangeProposal implements SecurityScopeWriteAttributes {

  /**
   * @autogenerated EntityChangeProposalGenerator
   */
  public static class SecurityScopeChangeProposalBuilder {

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param enabled
     * @return
     */
    public SecurityScopeChangeProposalBuilder enabled(final Boolean enabled) {
      return enabled(Optional.of(EnabledVO.from(enabled)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param enabled
     * @return
     */
    public SecurityScopeChangeProposalBuilder enabled(final Optional<EnabledVO> enabled) {
      this.enabled$value = enabled;
      this.enabled$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param kind
     * @return
     */
    public SecurityScopeChangeProposalBuilder kind(final SecurityScopeKindOptions kind) {
      return kind(Optional.of(KindVO.from(kind)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param kind
     * @return
     */
    public SecurityScopeChangeProposalBuilder kind(final Optional<KindVO> kind) {
      this.kind$value = kind;
      this.kind$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @return
     */
    public SecurityScopeChangeProposalBuilder newUid() {
      return version(0).uid(Uuid.comb().toString());
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param relyingParty
     * @return
     */
    public SecurityScopeChangeProposalBuilder relyingParty(final RelyingPartyRef relyingParty) {
      return relyingParty(Optional.of(RelyingPartyVO.from(relyingParty)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param relyingParty
     * @return
     */
    public SecurityScopeChangeProposalBuilder relyingParty(
        final Optional<RelyingPartyVO> relyingParty) {
      this.relyingParty$value = relyingParty;
      this.relyingParty$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param resource
     * @return
     */
    public SecurityScopeChangeProposalBuilder resource(final String resource) {
      return resource(Optional.of(ResourceVO.from(resource)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param resource
     * @return
     */
    public SecurityScopeChangeProposalBuilder resource(final Optional<ResourceVO> resource) {
      this.resource$value = resource;
      this.resource$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param scope
     * @return
     */
    public SecurityScopeChangeProposalBuilder scope(final String scope) {
      return scope(Optional.of(ScopeVO.from(scope)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param scope
     * @return
     */
    public SecurityScopeChangeProposalBuilder scope(final Optional<ScopeVO> scope) {
      this.scope$value = scope;
      this.scope$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param trustedClient
     * @return
     */
    public SecurityScopeChangeProposalBuilder trustedClient(final TrustedClientRef trustedClient) {
      return trustedClient(Optional.of(TrustedClientVO.from(trustedClient)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param trustedClient
     * @return
     */
    public SecurityScopeChangeProposalBuilder trustedClient(
        final Optional<TrustedClientVO> trustedClient) {
      this.trustedClient$value = trustedClient;
      this.trustedClient$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param uid
     * @return
     */
    public SecurityScopeChangeProposalBuilder uid(final String uid) {
      return uid(Optional.of(UidVO.from(uid)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param uid
     * @return
     */
    public SecurityScopeChangeProposalBuilder uid(final Optional<UidVO> uid) {
      this.uid$value = uid;
      this.uid$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param version
     * @return
     */
    public SecurityScopeChangeProposalBuilder version(final Integer version) {
      return version(Optional.of(VersionVO.from(version)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param version
     * @return
     */
    public SecurityScopeChangeProposalBuilder version(final Optional<VersionVO> version) {
      this.version$value = version;
      this.version$set = true;
      return this;
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param visibility
     * @return
     */
    public SecurityScopeChangeProposalBuilder visibility(
        final SecurityScopeVisibilityOptions visibility) {
      return visibility(Optional.of(VisibilityVO.from(visibility)));
    }

    /**
     * @autogenerated EntityChangeProposalGenerator
     * @param visibility
     * @return
     */
    public SecurityScopeChangeProposalBuilder visibility(final Optional<VisibilityVO> visibility) {
      this.visibility$value = visibility;
      this.visibility$set = true;
      return this;
    }
  }

  /**
   * El enabled de security scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<EnabledVO> enabled = Optional.empty();

  /**
   * El kind de security scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<KindVO> kind = Optional.empty();

  /**
   * El relying party de security scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<RelyingPartyVO> relyingParty = Optional.empty();

  /**
   * A label group key to show the scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<ResourceVO> resource = Optional.empty();

  /**
   * A label to show the scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<ScopeVO> scope = Optional.empty();

  /**
   * El trusted client de security scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<TrustedClientVO> trustedClient = Optional.empty();

  /**
   * A uid string to identify the entity
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<UidVO> uid = Optional.empty();

  /**
   * Campo con el n√∫mero de version de security scope para controlar bloqueos optimistas
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<VersionVO> version = Optional.empty();

  /**
   * El visibility de security scope
   *
   * @autogenerated EntityChangeProposalGenerator
   */
  @Builder.Default
  private Optional<VisibilityVO> visibility = Optional.empty();

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param attributes
   */
  public SecurityScopeChangeProposal(final SecurityScopeWriteAttributes attributes) {
    uid = attributes.getUid();
    trustedClient = attributes.getTrustedClient();
    relyingParty = attributes.getRelyingParty();
    resource = attributes.getResource();
    scope = attributes.getScope();
    enabled = attributes.getEnabled();
    kind = attributes.getKind();
    visibility = attributes.getVisibility();
    version = attributes.getVersion();
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param entity
   */
  public SecurityScopeChangeProposal(final SecurityScope entity) {
    uid = Optional.of(entity.getUid());
    trustedClient = Optional.of(entity.getTrustedClient());
    relyingParty = Optional.of(entity.getRelyingParty());
    resource = Optional.of(entity.getResource());
    scope = Optional.of(entity.getScope());
    enabled = Optional.of(entity.getEnabled());
    kind = Optional.of(entity.getKind());
    visibility = Optional.of(entity.getVisibility());
    version = Optional.of(entity.getVersion());
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeReference asReference() {
    return uid.map(UidVO::getValue).map(SecurityScopeReference::of).orElseThrow();
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<EnabledVO> getEnabled() {
    return enabled;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<KindVO> getKind() {
    return kind;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<RelyingPartyVO> getRelyingParty() {
    return relyingParty;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<ResourceVO> getResource() {
    return resource;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<ScopeVO> getScope() {
    return scope;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<TrustedClientVO> getTrustedClient() {
    return trustedClient;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<UidVO> getUid() {
    return uid;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<VersionVO> getVersion() {
    return version;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  @Override
  public Optional<VisibilityVO> getVisibility() {
    return visibility;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setEnabled(final Boolean value) {
    this.enabled = Optional.of(EnabledVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setKind(final SecurityScopeKindOptions value) {
    this.kind = Optional.of(KindVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setRelyingParty(final RelyingPartyRef value) {
    this.relyingParty = Optional.of(RelyingPartyVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setResource(final String value) {
    this.resource = Optional.of(ResourceVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setScope(final String value) {
    this.scope = Optional.of(ScopeVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setTrustedClient(final TrustedClientRef value) {
    this.trustedClient = Optional.of(TrustedClientVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setUid(final String value) {
    this.uid = Optional.of(UidVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setVersion(final Integer value) {
    this.version = Optional.of(VersionVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param value
   * @return
   */
  public SecurityScopeChangeProposal setVisibility(final SecurityScopeVisibilityOptions value) {
    this.visibility = Optional.of(VisibilityVO.from(value));
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @param field
   */
  public void unset(final String field) {
    if ("uid".equals(field)) {
      this.unsetUid();
    }
    if ("trustedClient".equals(field)) {
      this.unsetTrustedClient();
    }
    if ("relyingParty".equals(field)) {
      this.unsetRelyingParty();
    }
    if ("resource".equals(field)) {
      this.unsetResource();
    }
    if ("scope".equals(field)) {
      this.unsetScope();
    }
    if ("enabled".equals(field)) {
      this.unsetEnabled();
    }
    if ("kind".equals(field)) {
      this.unsetKind();
    }
    if ("visibility".equals(field)) {
      this.unsetVisibility();
    }
    if ("version".equals(field)) {
      this.unsetVersion();
    }
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetEnabled() {
    this.enabled = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetKind() {
    this.kind = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetRelyingParty() {
    this.relyingParty = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetResource() {
    this.resource = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetScope() {
    this.scope = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetTrustedClient() {
    this.trustedClient = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetUid() {
    this.uid = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetVersion() {
    this.version = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityChangeProposalGenerator
   * @return
   */
  public SecurityScopeChangeProposal unsetVisibility() {
    this.visibility = Optional.empty();
    return this;
  }
}
