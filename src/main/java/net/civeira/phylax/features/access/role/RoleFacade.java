package net.civeira.phylax.features.access.role;

import java.util.HashSet;
import java.util.Set;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.enterprise.inject.Instance;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.features.access.role.command.RoleWriteAttributes;
import net.civeira.phylax.features.access.role.transition.create.RoleCreatePipeline;
import net.civeira.phylax.features.access.role.transition.delete.RoleDeletePipeline;
import net.civeira.phylax.features.access.role.transition.update.RoleUpdatePipeline;

@ApplicationScoped
@RequiredArgsConstructor
public class RoleFacade {

  /**
   * @autogenerated AggregateFacadeGenerator
   */
  private final RoleCreatePipeline createPipeline;

  /**
   * @autogenerated AggregateFacadeGenerator
   */
  private final RoleDeletePipeline deletePipeline;

  /**
   * @autogenerated AggregateFacadeGenerator
   */
  private final Instance<RoleMetadataProvider> metadataProvider;

  /**
   * @autogenerated AggregateFacadeGenerator
   */
  private final RoleUpdatePipeline updatePipeline;

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param attributes a filter to retrieve only matching values
   * @return The entity
   */
  public Role create(final RoleWriteAttributes attributes) {
    return Role.create(attributes, createPipeline);
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param entity a filter to retrieve only matching values
   * @return The entity
   */
  public Role delete(final Role entity) {
    return entity.delete(deletePipeline);
  }

  /**
   * @autogenerated AggregateFacadeGenerator
   * @return
   */
  public Set<String> readonlyFields() {
    Set<String> set = new HashSet<>();
    metadataProvider.forEach(meta -> set.addAll(meta.readonlyFields()));
    return set;
  }

  /**
   * The entity
   *
   * @autogenerated AggregateFacadeGenerator
   * @param base a filter to retrieve only matching values
   * @param attributes a filter to retrieve only matching values
   * @return The entity
   */
  public Role update(final Role base, final RoleWriteAttributes attributes) {
    return base.update(attributes, updatePipeline);
  }
}
