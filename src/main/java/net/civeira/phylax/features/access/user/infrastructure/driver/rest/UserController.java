package net.civeira.phylax.features.access.user.infrastructure.driver.rest;

import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.UserApi;
import net.civeira.phylax.generated.openapi.model.UserApiDto;

@RequiredArgsConstructor
public class UserController implements UserApi {

  /**
   * UserApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserCreateController createController;

  /**
   * User
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserDeleteController deleteController;

  /**
   * Disable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserDisableController disableController;

  /**
   * Enable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserEnableController enableController;

  /**
   * User
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserListController listController;

  /**
   * User
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserRetrieveController retrieveController;

  /**
   * Unlock
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserUnlockController unlockController;

  /**
   * UserApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final UserUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param root
   * @param name
   * @param tenant
   * @param tenants
   * @return
   */
  @Override
  public Response userApiBatchDelete(final List<String> uids, final String search,
      final Boolean root, final String name, final String tenant, final List<String> tenants) {
    return deleteController.userApiBatchDelete(uids, search, root, name, tenant, tenants);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response userApiBatchDeleteQuery(final String batchId) {
    return deleteController.userApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param root
   * @param name
   * @param tenant
   * @param tenants
   * @return
   */
  @Override
  public Response userApiBatchDisable(final List<String> uids, final String search,
      final Boolean root, final String name, final String tenant, final List<String> tenants) {
    return disableController.userApiBatchDisable(uids, search, root, name, tenant, tenants);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response userApiBatchDisableQuery(final String batchId) {
    return disableController.userApiBatchDisableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param root
   * @param name
   * @param tenant
   * @param tenants
   * @return
   */
  @Override
  public Response userApiBatchEnable(final List<String> uids, final String search,
      final Boolean root, final String name, final String tenant, final List<String> tenants) {
    return enableController.userApiBatchEnable(uids, search, root, name, tenant, tenants);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response userApiBatchEnableQuery(final String batchId) {
    return enableController.userApiBatchEnableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param root
   * @param name
   * @param tenant
   * @param tenants
   * @return
   */
  @Override
  public Response userApiBatchUnlock(final List<String> uids, final String search,
      final Boolean root, final String name, final String tenant, final List<String> tenants) {
    return unlockController.userApiBatchUnlock(uids, search, root, name, tenant, tenants);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response userApiBatchUnlockQuery(final String batchId) {
    return unlockController.userApiBatchUnlockQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param user
   * @return
   */
  @Override
  public Response userApiCreate(UserApiDto user) {
    return createController.userApiCreate(user);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userApiDelete(final String uid) {
    return deleteController.userApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userApiDisable(final String uid) {
    return disableController.userApiDisable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userApiEnable(final String uid) {
    return enableController.userApiEnable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param root
   * @param name
   * @param tenant
   * @param tenants
   * @param limit
   * @param sinceUid
   * @param sinceName
   * @param order
   * @return
   */
  @Override
  public Response userApiList(final List<String> uids, final String search, final Boolean root,
      final String name, final String tenant, final List<String> tenants, final Integer limit,
      final String sinceUid, final String sinceName, final String order) {
    return listController.userApiList(uids, search, root, name, tenant, tenants, limit, sinceUid,
        sinceName, order);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userApiRetrieve(final String uid) {
    return retrieveController.userApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response userApiUnlock(final String uid) {
    return unlockController.userApiUnlock(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param user
   * @return
   */
  @Override
  public Response userApiUpdate(final String uid, UserApiDto user) {
    return updateController.userApiUpdate(uid, user);
  }
}
