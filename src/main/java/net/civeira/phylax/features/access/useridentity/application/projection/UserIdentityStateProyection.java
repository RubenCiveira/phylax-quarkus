package net.civeira.phylax.features.access.useridentity.application.projection;

import java.util.List;
import java.util.Optional;

import net.civeira.phylax.features.access.relyingparty.RelyingPartyRef;
import net.civeira.phylax.features.access.trustedclient.TrustedClientRef;
import net.civeira.phylax.features.access.user.UserRef;
import net.civeira.phylax.features.access.useridentity.Roles;
import net.civeira.phylax.features.access.useridentity.UserIdentity;

public class UserIdentityStateProyection {

  /**
   * El relying party de user identity
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<RelyingPartyRef> relyingParty = Optional.empty();

  /**
   * El roles de user identity
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<List<Roles>> roles = Optional.empty();

  /**
   * El trusted client de user identity
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<TrustedClientRef> trustedClient = Optional.empty();

  /**
   * A uid string to identify the entity
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<String> uid = Optional.empty();

  /**
   * El user de user identity
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<UserRef> user = Optional.empty();

  /**
   * Campo con el n√∫mero de version de user identity para controlar bloqueos optimistas
   *
   * @autogenerated EntityStateProyectionGenerator
   */
  private Optional<Integer> version = Optional.empty();

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param entity
   */
  public UserIdentityStateProyection(final UserIdentity entity) {
    uid = Optional.of(entity.getUid().getValue());
    user = Optional.of(entity.getUser().getValue());
    relyingParty = entity.getRelyingParty().getValue();
    trustedClient = entity.getTrustedClient().getValue();
    roles = Optional.of(entity.getRoles().getValue());
    version = entity.getVersion().getValue();
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<RelyingPartyRef> getRelyingParty() {
    return relyingParty;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<List<Roles>> getRoles() {
    return roles;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<TrustedClientRef> getTrustedClient() {
    return trustedClient;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<String> getUid() {
    return uid;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<UserRef> getUser() {
    return user;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public Optional<Integer> getVersion() {
    return version;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public UserIdentityStateProyection setRelyingParty(final Optional<RelyingPartyRef> value) {
    this.relyingParty = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public UserIdentityStateProyection setRoles(final Optional<List<Roles>> value) {
    this.roles = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public UserIdentityStateProyection setTrustedClient(final Optional<TrustedClientRef> value) {
    this.trustedClient = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public UserIdentityStateProyection setUid(final Optional<String> value) {
    this.uid = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public UserIdentityStateProyection setUser(final Optional<UserRef> value) {
    this.user = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param value
   * @return
   */
  public UserIdentityStateProyection setVersion(final Optional<Integer> value) {
    this.version = value;
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @param field
   */
  public void unset(final String field) {
    if ("uid".equals(field)) {
      this.unsetUid();
    }
    if ("user".equals(field)) {
      this.unsetUser();
    }
    if ("relyingParty".equals(field)) {
      this.unsetRelyingParty();
    }
    if ("trustedClient".equals(field)) {
      this.unsetTrustedClient();
    }
    if ("roles".equals(field)) {
      this.unsetRoles();
    }
    if ("version".equals(field)) {
      this.unsetVersion();
    }
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public UserIdentityStateProyection unsetRelyingParty() {
    this.relyingParty = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public UserIdentityStateProyection unsetRoles() {
    this.roles = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public UserIdentityStateProyection unsetTrustedClient() {
    this.trustedClient = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public UserIdentityStateProyection unsetUid() {
    this.uid = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public UserIdentityStateProyection unsetUser() {
    this.user = Optional.empty();
    return this;
  }

  /**
   * @autogenerated EntityStateProyectionGenerator
   * @return
   */
  public UserIdentityStateProyection unsetVersion() {
    this.version = Optional.empty();
    return this;
  }
}
