package net.civeira.phylax.features.access.tenantconfig.infrastructure.driver.rest;

import java.util.ArrayList;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.common.security.Allow;
import net.civeira.phylax.common.security.Interaction;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.create.TenantConfigCreateUsecase;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.delete.TenantConfigDeleteUsecase;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.list.TenantConfigListUsecase;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.retrieve.TenantConfigRetrieveUsecase;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.update.TenantConfigUpdateUsecase;
import net.civeira.phylax.features.access.tenantconfig.application.visibility.TenantConfigsVisibility;
import net.civeira.phylax.generated.openapi.api.TenantConfigAclApi;
import net.civeira.phylax.generated.openapi.model.CommonAllow;
import net.civeira.phylax.generated.openapi.model.TenantConfigAclFields;
import net.civeira.phylax.generated.openapi.model.TenantConfigAclGenericAllows;
import net.civeira.phylax.generated.openapi.model.TenantConfigAclSpecificAllows;
import net.civeira.phylax.generated.openapi.model.TenantConfigGenericAcl;
import net.civeira.phylax.generated.openapi.model.TenantConfigSpecificAcl;

@RequiredArgsConstructor
public class TenantConfigAclController implements TenantConfigAclApi {

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TenantConfigCreateUsecase create;

  /**
   * TenantConfig
   *
   * @autogenerated AclControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TenantConfigDeleteUsecase delete;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TenantConfigListUsecase list;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TenantConfigRetrieveUsecase retrieve;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TenantConfigUpdateUsecase update;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TenantConfigsVisibility visibility;

  /**
   * @autogenerated AclControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response tenantConfigApiContextualAcl(final String uid) {
    Interaction interaction = currentRequest.interaction();
    TenantConfigSpecificAcl response = new TenantConfigSpecificAcl();
    response.setAllows(new TenantConfigAclSpecificAllows());
    response.setFields(new TenantConfigAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @return
   */
  @Override
  public Response tenantConfigApiGenericAcl() {
    Interaction interaction = currentRequest.interaction();
    TenantConfigGenericAcl response = new TenantConfigGenericAcl();
    response.setAllows(new TenantConfigAclGenericAllows());
    response.setFields(new TenantConfigAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    listAllows(response, interaction);
    createAllows(response, interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void createAllows(final TenantConfigGenericAcl response, final Interaction query) {
    Allow detail = create.allow(query);
    response.getAllows()
        .setCreate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final TenantConfigGenericAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final TenantConfigSpecificAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void fixedFields(final TenantConfigAclFields response, final Interaction query) {
    visibility.fieldsToFix(query).forEach(field -> response.getNoEditables().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void hiddenFields(final TenantConfigAclFields response, final Interaction query) {
    visibility.fieldsToHide(query).forEach(field -> response.getNoVisibles().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void listAllows(final TenantConfigGenericAcl response, final Interaction query) {
    Allow detail = list.allow(query);
    response.getAllows()
        .setList(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final TenantConfigGenericAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final TenantConfigSpecificAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final TenantConfigGenericAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final TenantConfigSpecificAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }
}
