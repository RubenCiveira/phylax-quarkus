package net.civeira.phylax.features.access.user.infrastructure.repository;

import java.util.Iterator;
import java.util.List;
import java.util.function.BiFunction;

import net.civeira.phylax.common.algorithms.Slider;
import net.civeira.phylax.features.access.user.domain.User;
import net.civeira.phylax.features.access.user.domain.gateway.UserCursor;
import net.civeira.phylax.features.access.user.domain.gateway.UserFilter;

class UserSlider extends Slider<User> {

  /**
   * @autogenerated SlideGenerator
   */
  private final UserCursor cursor;

  /**
   * @autogenerated SlideGenerator
   */
  private final UserFilter filter;

  /**
   * @autogenerated SlideGenerator
   */
  private final BiFunction<UserFilter, UserCursor, Iterator<User>> gateway;

  /**
   * @autogenerated SlideGenerator
   * @param multi
   * @param limit
   * @param gateway
   * @param filter
   * @param cursor
   */
  UserSlider(final Iterator<User> multi, final int limit,
      final BiFunction<UserFilter, UserCursor, Iterator<User>> gateway, final UserFilter filter,
      final UserCursor cursor) {
    super(multi, limit);
    this.gateway = gateway;
    this.filter = filter;
    this.cursor = cursor;
  }

  /**
   * @autogenerated SlideGenerator
   * @param users
   * @param limit
   * @return
   */
  @Override
  public Iterator<User> next(List<User> users, int limit) {
    User last = users.get(users.size() - 1);
    UserCursor cr = this.cursor.withSinceUid(last.getUid()).withLimit(limit);
    return gateway.apply(this.filter, cr);
  }
}
