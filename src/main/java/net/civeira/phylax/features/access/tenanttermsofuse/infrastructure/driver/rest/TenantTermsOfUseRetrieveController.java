package net.civeira.phylax.features.access.tenanttermsofuse.infrastructure.driver.rest;

import jakarta.enterprise.context.RequestScoped;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.tenanttermsofuse.application.usecase.retrieve.TenantTermsOfUseRetrieveProjection;
import net.civeira.phylax.features.access.tenanttermsofuse.application.usecase.retrieve.TenantTermsOfUseRetrieveUsecase;
import net.civeira.phylax.features.access.tenanttermsofuse.domain.TenantTermsOfUseReference;
import net.civeira.phylax.generated.openapi.model.TenantApiRef;
import net.civeira.phylax.generated.openapi.model.TenantTermsOfUseApiDto;

@RequiredArgsConstructor
@RequestScoped
public class TenantTermsOfUseRetrieveController {

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final TenantTermsOfUseRetrieveUsecase retrieve;

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param uid
   * @return
   */
  public Response tenantTermsOfUseApiRetrieve(final String uid) {
    TenantTermsOfUseRetrieveProjection retrieved =
        retrieve.retrieve(currentRequest.interaction(), TenantTermsOfUseReference.of(uid));
    /* .header("Last-Modified", value.getSince().format(DateTimeFormatter.RFC_1123_DATE_TIME))) */
    return Response.ok(toApiModel(retrieved)).build();
  }

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param dto
   * @return
   */
  private TenantTermsOfUseApiDto toApiModel(TenantTermsOfUseRetrieveProjection dto) {
    TenantTermsOfUseApiDto tenantTermsOfUseApiDto = new TenantTermsOfUseApiDto();
    tenantTermsOfUseApiDto.setUid(dto.getUid());
    tenantTermsOfUseApiDto.setTenant(new TenantApiRef().$ref(dto.getTenantReference()));
    tenantTermsOfUseApiDto.setText(dto.getText());
    String attached = dto.getAttached();
    if (null != attached) {
      tenantTermsOfUseApiDto.setAttached(currentRequest.getPublicHost()
          + "/api/access/tenants-terms-of-use/" + dto.getUidOrDefault("-") + "/attached");
    }
    tenantTermsOfUseApiDto.setActivationDate(dto.getActivationDate());
    tenantTermsOfUseApiDto.setVersion(dto.getVersion());
    return tenantTermsOfUseApiDto;
  }
}
