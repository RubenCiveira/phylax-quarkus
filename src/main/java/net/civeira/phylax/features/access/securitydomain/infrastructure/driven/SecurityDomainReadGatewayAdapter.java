package net.civeira.phylax.features.access.securitydomain.infrastructure.driven;

import java.util.List;
import java.util.Optional;

import jakarta.enterprise.context.ApplicationScoped;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.algorithms.Slider;
import net.civeira.phylax.features.access.securitydomain.domain.SecurityDomain;
import net.civeira.phylax.features.access.securitydomain.domain.SecurityDomainRef;
import net.civeira.phylax.features.access.securitydomain.domain.gateway.SecurityDomainCursor;
import net.civeira.phylax.features.access.securitydomain.domain.gateway.SecurityDomainFilter;
import net.civeira.phylax.features.access.securitydomain.domain.gateway.SecurityDomainReadRepositoryGateway;
import net.civeira.phylax.features.access.securitydomain.infrastructure.repository.SecurityDomainRepository;

@ApplicationScoped
@RequiredArgsConstructor
public class SecurityDomainReadGatewayAdapter implements SecurityDomainReadRepositoryGateway {

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   */
  private final SecurityDomainRepository repository;

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param filter
   * @return
   */
  @Override
  public long count(SecurityDomainFilter filter) {
    return repository.count(filter);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param uid
   * @param filter
   * @return
   */
  @Override
  public boolean exists(String uid, Optional<SecurityDomainFilter> filter) {
    return repository.exists(uid, filter);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param filter
   * @return
   */
  @Override
  public Optional<SecurityDomain> find(SecurityDomainFilter filter) {
    return repository.find(filter);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param filter
   * @return
   */
  @Override
  public List<SecurityDomain> list(SecurityDomainFilter filter) {
    return repository.list(filter);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param reference
   * @return
   */
  @Override
  public SecurityDomain resolve(SecurityDomainRef reference) {
    return repository.resolve(reference);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param uid
   * @param filter
   * @return
   */
  @Override
  public Optional<SecurityDomain> retrieve(String uid, Optional<SecurityDomainFilter> filter) {
    return repository.retrieve(uid, filter);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param filter
   * @param cursor
   * @return
   */
  @Override
  public Slider<SecurityDomain> slide(SecurityDomainFilter filter, SecurityDomainCursor cursor) {
    return repository.slide(filter, cursor);
  }
}
