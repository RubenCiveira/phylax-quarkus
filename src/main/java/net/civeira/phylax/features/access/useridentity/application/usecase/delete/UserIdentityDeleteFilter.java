package net.civeira.phylax.features.access.useridentity.application.usecase.delete;

import java.util.List;
import java.util.Optional;

import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.With;
import net.civeira.phylax.features.access.relyingparty.domain.RelyingPartyRef;
import net.civeira.phylax.features.access.trustedclient.domain.TrustedClientRef;
import net.civeira.phylax.features.access.user.domain.UserRef;

@Data
@Builder(toBuilder = true)
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class UserIdentityDeleteFilter {

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private RelyingPartyRef relyingParty;

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private List<String> relyingPartys;

  /**
   * The filter to select the results to retrieve
   *
   * @autogenerated DeleteFilterGenerator
   */
  private String search;

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private TrustedClientRef trustedClient;

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private List<String> trustedClients;

  /**
   * The filter to select the results to retrieve
   *
   * @autogenerated DeleteFilterGenerator
   */
  private String uid;

  /**
   * The filter to select the results to retrieve
   *
   * @autogenerated DeleteFilterGenerator
   */
  private List<String> uids;

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private UserRef user;

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private String userTenantTenantAccesible;

  /**
   * @autogenerated DeleteFilterGenerator
   */
  private List<String> users;

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public Optional<RelyingPartyRef> getRelyingParty() {
    return Optional.ofNullable(relyingParty);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public List<String> getRelyingPartys() {
    return null == relyingPartys ? List.of() : List.copyOf(relyingPartys);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public Optional<String> getSearch() {
    return Optional.ofNullable(search);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public Optional<TrustedClientRef> getTrustedClient() {
    return Optional.ofNullable(trustedClient);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public List<String> getTrustedClients() {
    return null == trustedClients ? List.of() : List.copyOf(trustedClients);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public Optional<String> getUid() {
    return Optional.ofNullable(uid);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public List<String> getUids() {
    return null == uids ? List.of() : List.copyOf(uids);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public Optional<UserRef> getUser() {
    return Optional.ofNullable(user);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public Optional<String> getUserTenantTenantAccesible() {
    return Optional.ofNullable(userTenantTenantAccesible);
  }

  /**
   * @autogenerated DeleteFilterGenerator
   * @return
   */
  public List<String> getUsers() {
    return null == users ? List.of() : List.copyOf(users);
  }
}
