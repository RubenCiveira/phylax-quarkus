/* @autogenerated */
package net.civeira.phylax.features.access.oauth.application.service;

import java.security.SecureRandom;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class SecureCodeGenerator {
  private SecureCodeGenerator() {
    /* private constructor for utility class */
  }

  public static String generate() {
    Stream<Character> pwdStream =
        Stream.concat(getRandomAlphabets(2, true), getRandomAlphabets(4, false));
    List<Character> charList = pwdStream.collect(Collectors.toList());
    Collections.shuffle(charList);
    String password = charList.stream()
        .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append).toString();
    return password;
  }

  private static Stream<Character> getRandomAlphabets(int count, boolean uppercase) {
    IntStream specialChars = random().ints(count, uppercase ? 65 : 97, uppercase ? 90 : 122);
    return specialChars.mapToObj(data -> (char) data);
  }

  /* default */ static Random random() {
    return new SecureRandom();
  }
}
