package net.civeira.phylax.features.access.role.infrastructure.repository;

import java.util.Iterator;
import java.util.List;
import java.util.function.BiFunction;

import net.civeira.phylax.common.algorithms.Slider;
import net.civeira.phylax.features.access.role.domain.Role;
import net.civeira.phylax.features.access.role.domain.gateway.RoleCursor;
import net.civeira.phylax.features.access.role.domain.gateway.RoleFilter;

class RoleSlider extends Slider<Role> {

  /**
   * @autogenerated SlideGenerator
   */
  private final RoleCursor cursor;

  /**
   * @autogenerated SlideGenerator
   */
  private final RoleFilter filter;

  /**
   * @autogenerated SlideGenerator
   */
  private final BiFunction<RoleFilter, RoleCursor, Iterator<Role>> gateway;

  /**
   * @autogenerated SlideGenerator
   * @param multi
   * @param limit
   * @param gateway
   * @param filter
   * @param cursor
   */
  RoleSlider(final Iterator<Role> multi, final int limit,
      final BiFunction<RoleFilter, RoleCursor, Iterator<Role>> gateway, final RoleFilter filter,
      final RoleCursor cursor) {
    super(multi, limit);
    this.gateway = gateway;
    this.filter = filter;
    this.cursor = cursor;
  }

  /**
   * @autogenerated SlideGenerator
   * @param roles
   * @param limit
   * @return
   */
  @Override
  public Iterator<Role> next(List<Role> roles, int limit) {
    Role last = roles.get(roles.size() - 1);
    RoleCursor cr = this.cursor.withSinceUid(last.getUid()).withLimit(limit);
    return gateway.apply(this.filter, cr);
  }
}
