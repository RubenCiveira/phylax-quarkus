package net.civeira.phylax.features.access.useracceptedtermnsofuse.gateway;

import java.util.List;
import java.util.Optional;

import net.civeira.phylax.features.access.useracceptedtermnsofuse.UserAcceptedTermnsOfUse;
import net.civeira.phylax.features.access.useracceptedtermnsofuse.query.UserAcceptedTermnsOfUseCursor;
import net.civeira.phylax.features.access.useracceptedtermnsofuse.query.UserAcceptedTermnsOfUseFilter;

public interface UserAcceptedTermnsOfUseCacheGateway {

  /**
   * @autogenerated CacheGatewayGenerator
   */
  public void evict();

  /**
   * @autogenerated CacheGatewayGenerator
   * @param userAcceptedTermnsOfUse
   */
  public void remove(UserAcceptedTermnsOfUse userAcceptedTermnsOfUse);

  /**
   * @autogenerated CacheGatewayGenerator
   * @param filter
   * @param cursor
   * @return
   */
  public Optional<UserAcceptedTermnsOfUseCached> retrieve(UserAcceptedTermnsOfUseFilter filter,
      UserAcceptedTermnsOfUseCursor cursor);

  /**
   * @autogenerated CacheGatewayGenerator
   * @param filter
   * @param cursor
   * @param userAcceptedTermnsOfUses
   * @return
   */
  public UserAcceptedTermnsOfUseCached store(UserAcceptedTermnsOfUseFilter filter,
      UserAcceptedTermnsOfUseCursor cursor, List<UserAcceptedTermnsOfUse> userAcceptedTermnsOfUses);

  /**
   * @autogenerated CacheGatewayGenerator
   * @param userAcceptedTermnsOfUse
   */
  public void update(UserAcceptedTermnsOfUse userAcceptedTermnsOfUse);
}
