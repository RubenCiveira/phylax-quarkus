package net.civeira.phylax.features.access.trustedclient.infrastructure.driver.rest;

import java.util.ArrayList;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.common.security.Allow;
import net.civeira.phylax.common.security.Interaction;
import net.civeira.phylax.features.access.trustedclient.application.usecase.create.TrustedClientCreateUsecase;
import net.civeira.phylax.features.access.trustedclient.application.usecase.delete.TrustedClientDeleteUsecase;
import net.civeira.phylax.features.access.trustedclient.application.usecase.disable.TrustedClientDisableUsecase;
import net.civeira.phylax.features.access.trustedclient.application.usecase.enable.TrustedClientEnableUsecase;
import net.civeira.phylax.features.access.trustedclient.application.usecase.list.TrustedClientListUsecase;
import net.civeira.phylax.features.access.trustedclient.application.usecase.retrieve.TrustedClientRetrieveUsecase;
import net.civeira.phylax.features.access.trustedclient.application.usecase.update.TrustedClientUpdateUsecase;
import net.civeira.phylax.features.access.trustedclient.application.visibility.TrustedClientsVisibility;
import net.civeira.phylax.generated.openapi.api.TrustedClientAclApi;
import net.civeira.phylax.generated.openapi.model.CommonAllow;
import net.civeira.phylax.generated.openapi.model.TrustedClientAclFields;
import net.civeira.phylax.generated.openapi.model.TrustedClientAclGenericAllows;
import net.civeira.phylax.generated.openapi.model.TrustedClientAclSpecificAllows;
import net.civeira.phylax.generated.openapi.model.TrustedClientGenericAcl;
import net.civeira.phylax.generated.openapi.model.TrustedClientSpecificAcl;

@RequiredArgsConstructor
public class TrustedClientAclController implements TrustedClientAclApi {

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientCreateUsecase create;

  /**
   * TrustedClient
   *
   * @autogenerated AclControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientDeleteUsecase delete;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientDisableUsecase disable;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientEnableUsecase enable;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientListUsecase list;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientRetrieveUsecase retrieve;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientUpdateUsecase update;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final TrustedClientsVisibility visibility;

  /**
   * @autogenerated AclControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response trustedClientApiContextualAcl(final String uid) {
    Interaction interaction = currentRequest.interaction();
    TrustedClientSpecificAcl response = new TrustedClientSpecificAcl();
    response.setAllows(new TrustedClientAclSpecificAllows());
    response.setFields(new TrustedClientAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    enableAllows(response, interaction);
    disableAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @return
   */
  @Override
  public Response trustedClientApiGenericAcl() {
    Interaction interaction = currentRequest.interaction();
    TrustedClientGenericAcl response = new TrustedClientGenericAcl();
    response.setAllows(new TrustedClientAclGenericAllows());
    response.setFields(new TrustedClientAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    listAllows(response, interaction);
    createAllows(response, interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    enableAllows(response, interaction);
    disableAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void createAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = create.allow(query);
    response.getAllows()
        .setCreate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final TrustedClientSpecificAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void disableAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = disable.allow(query);
    response.getAllows()
        .setDisable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void disableAllows(final TrustedClientSpecificAcl response, final Interaction query) {
    Allow detail = disable.allow(query);
    response.getAllows()
        .setDisable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void enableAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = enable.allow(query);
    response.getAllows()
        .setEnable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void enableAllows(final TrustedClientSpecificAcl response, final Interaction query) {
    Allow detail = enable.allow(query);
    response.getAllows()
        .setEnable(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void fixedFields(final TrustedClientAclFields response, final Interaction query) {
    visibility.fieldsToFix(query).forEach(field -> response.getNoEditables().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void hiddenFields(final TrustedClientAclFields response, final Interaction query) {
    visibility.fieldsToHide(query).forEach(field -> response.getNoVisibles().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void listAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = list.allow(query);
    response.getAllows()
        .setList(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final TrustedClientSpecificAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final TrustedClientGenericAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final TrustedClientSpecificAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }
}
