package net.civeira.phylax.features.access.role.infrastructure.driver.rest;

import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.RoleApi;
import net.civeira.phylax.generated.openapi.model.RoleApiDto;

@RequiredArgsConstructor
public class RoleController implements RoleApi {

  /**
   * RoleApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RoleCreateController createController;

  /**
   * Role
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RoleDeleteController deleteController;

  /**
   * Role
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RoleListController listController;

  /**
   * Role
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RoleRetrieveController retrieveController;

  /**
   * RoleApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final RoleUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param name
   * @param tenant
   * @param tenants
   * @return
   */
  @Override
  public Response roleApiBatchDelete(final List<String> uids, final String search,
      final String name, final String tenant, final List<String> tenants) {
    return deleteController.roleApiBatchDelete(uids, search, name, tenant, tenants);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response roleApiBatchDeleteQuery(final String batchId) {
    return deleteController.roleApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param role
   * @return
   */
  @Override
  public Response roleApiCreate(RoleApiDto role) {
    return createController.roleApiCreate(role);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response roleApiDelete(final String uid) {
    return deleteController.roleApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param name
   * @param tenant
   * @param tenants
   * @param limit
   * @param sinceUid
   * @param sinceName
   * @param order
   * @return
   */
  @Override
  public Response roleApiList(final List<String> uids, final String search, final String name,
      final String tenant, final List<String> tenants, final Integer limit, final String sinceUid,
      final String sinceName, final String order) {
    return listController.roleApiList(uids, search, name, tenant, tenants, limit, sinceUid,
        sinceName, order);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response roleApiRetrieve(final String uid) {
    return retrieveController.roleApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param role
   * @return
   */
  @Override
  public Response roleApiUpdate(final String uid, RoleApiDto role) {
    return updateController.roleApiUpdate(uid, role);
  }
}
