package net.civeira.phylax.features.access.tenanttermsofuse.application.usecase.attachedupload;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.enterprise.event.Event;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.exception.NotAllowedException;
import net.civeira.phylax.common.exception.NotFoundException;
import net.civeira.phylax.common.infrastructure.store.BinaryContent;
import net.civeira.phylax.common.security.Allow;
import net.civeira.phylax.common.security.Interaction;
import net.civeira.phylax.features.access.tenanttermsofuse.domain.gateway.TenantTermsOfUseAttachedUploadGateway;

@ApplicationScoped
@RequiredArgsConstructor
public class TenantTermsOfUseAttachedTemporalUploadUsecase {

  /**
   * @autogenerated ListUsecaseGenerator
   */
  private final TenantTermsOfUseAttachedUploadGateway store;

  /**
   * @autogenerated ListUsecaseGenerator
   */
  private final Event<TenantTermsOfUseAttachedTemporalUploadAllowDecision> tempUploadAllowEmitter;

  /**
   * @autogenerated ListUsecaseGenerator
   * @param query
   * @return
   */
  public Allow allow(final Interaction query) {
    TenantTermsOfUseAttachedTemporalUploadAllowDecision base =
        TenantTermsOfUseAttachedTemporalUploadAllowDecision.builder()
            .detail(Allow.builder().allowed(true).description("Allowed by default").build())
            .query(query).build();
    tempUploadAllowEmitter.fire(base);
    return base.getDetail();
  }

  /**
   * @autogenerated ListUsecaseGenerator
   * @param query
   * @param key
   * @return
   */
  public BinaryContent read(final Interaction query, final String key) {
    Allow detail = allow(query);
    if (!detail.isAllowed()) {
      throw new NotAllowedException(detail.getDescription());
    }
    return store.readTemporalAttached(key).orElseThrow(() -> new NotFoundException(""));
  }

  /**
   * Recover a slide of data.
   *
   * @autogenerated ListUsecaseGenerator
   * @param query
   * @param binary a filter to retrieve only matching values
   * @return The slide with some values
   */
  public String upload(final Interaction query, final BinaryContent binary) {
    Allow detail = allow(query);
    if (!detail.isAllowed()) {
      throw new NotAllowedException(detail.getDescription());
    }
    return store.storeTemporalAttached(binary);
  }
}
