package net.civeira.phylax.features.access.relyingparty.infrastructure.driver.rest;

import jakarta.transaction.Transactional;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.relyingparty.application.usecase.update.RelyingPartyUpdateInput;
import net.civeira.phylax.features.access.relyingparty.application.usecase.update.RelyingPartyUpdateProjection;
import net.civeira.phylax.features.access.relyingparty.application.usecase.update.RelyingPartyUpdateUsecase;
import net.civeira.phylax.features.access.relyingparty.domain.RelyingPartyReference;
import net.civeira.phylax.generated.openapi.model.RelyingPartyApiDto;

@RequiredArgsConstructor
public class RelyingPartyUpdateController {

  /**
   * @autogenerated UpdateControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated UpdateControllerGenerator
   */
  private final RelyingPartyUpdateUsecase update;

  /**
   * @autogenerated UpdateControllerGenerator
   * @param uid
   * @param relyingParty
   * @return
   */
  @Transactional
  public Response relyingPartyApiUpdate(final String uid, final RelyingPartyApiDto relyingParty) {
    RelyingPartyUpdateProjection updated = update.update(currentRequest.interaction(),
        RelyingPartyReference.of(uid), toDomainModel(relyingParty));
    return Response.ok(toApiModel(updated)).build();
  }

  /**
   * @autogenerated UpdateControllerGenerator
   * @param dto
   * @return
   */
  private RelyingPartyApiDto toApiModel(RelyingPartyUpdateProjection dto) {
    RelyingPartyApiDto relyingPartyApiDto = new RelyingPartyApiDto();
    relyingPartyApiDto.setUid(dto.getUid());
    relyingPartyApiDto.setCode(dto.getCode());
    relyingPartyApiDto.setApiKey(dto.getApiKey());
    relyingPartyApiDto.setEnabled(dto.getEnabled());
    relyingPartyApiDto.setVersion(dto.getVersion());
    return relyingPartyApiDto;
  }

  /**
   * @autogenerated UpdateControllerGenerator
   * @param relyingPartyApiDto
   * @return
   */
  private RelyingPartyUpdateInput toDomainModel(RelyingPartyApiDto relyingPartyApiDto) {
    RelyingPartyUpdateInput dto = new RelyingPartyUpdateInput();
    if (null != relyingPartyApiDto.getUid()) {
      dto.setUid(relyingPartyApiDto.getUid());
    }
    if (null != relyingPartyApiDto.getCode()) {
      dto.setCode(relyingPartyApiDto.getCode());
    }
    if (null != relyingPartyApiDto.getApiKey()) {
      dto.setApiKey(relyingPartyApiDto.getApiKey());
    }
    if (null != relyingPartyApiDto.getEnabled()) {
      dto.setEnabled(relyingPartyApiDto.getEnabled());
    }
    if (null != relyingPartyApiDto.getVersion()) {
      dto.setVersion(relyingPartyApiDto.getVersion());
    }
    return dto;
  }
}
