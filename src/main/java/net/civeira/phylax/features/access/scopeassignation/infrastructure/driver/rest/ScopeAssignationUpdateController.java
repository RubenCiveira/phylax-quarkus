package net.civeira.phylax.features.access.scopeassignation.infrastructure.driver.rest;

import jakarta.transaction.Transactional;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.scopeassignation.application.usecase.update.ScopeAssignationUpdateInput;
import net.civeira.phylax.features.access.scopeassignation.application.usecase.update.ScopeAssignationUpdateProjection;
import net.civeira.phylax.features.access.scopeassignation.application.usecase.update.ScopeAssignationUpdateUsecase;
import net.civeira.phylax.features.access.scopeassignation.domain.ScopeAssignationReference;
import net.civeira.phylax.features.access.securitydomain.domain.SecurityDomainReference;
import net.civeira.phylax.features.access.securityscope.domain.SecurityScopeReference;
import net.civeira.phylax.generated.openapi.model.ScopeAssignationApiDto;
import net.civeira.phylax.generated.openapi.model.SecurityDomainApiRef;
import net.civeira.phylax.generated.openapi.model.SecurityScopeApiRef;

@RequiredArgsConstructor
public class ScopeAssignationUpdateController {

  /**
   * @autogenerated UpdateControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated UpdateControllerGenerator
   */
  private final ScopeAssignationUpdateUsecase update;

  /**
   * @autogenerated UpdateControllerGenerator
   * @param uid
   * @param scopeAssignation
   * @return
   */
  @Transactional
  public Response scopeAssignationApiUpdate(final String uid,
      final ScopeAssignationApiDto scopeAssignation) {
    ScopeAssignationUpdateProjection updated = update.update(currentRequest.interaction(),
        ScopeAssignationReference.of(uid), toDomainModel(scopeAssignation));
    return Response.ok(toApiModel(updated)).build();
  }

  /**
   * @autogenerated UpdateControllerGenerator
   * @param dto
   * @return
   */
  private ScopeAssignationApiDto toApiModel(ScopeAssignationUpdateProjection dto) {
    ScopeAssignationApiDto scopeAssignationApiDto = new ScopeAssignationApiDto();
    scopeAssignationApiDto.setUid(dto.getUid());
    scopeAssignationApiDto
        .setSecurityDomain(new SecurityDomainApiRef().$ref(dto.getSecurityDomainReference()));
    scopeAssignationApiDto
        .setSecurityScope(new SecurityScopeApiRef().$ref(dto.getSecurityScopeReference()));
    scopeAssignationApiDto.setVersion(dto.getVersion());
    return scopeAssignationApiDto;
  }

  /**
   * @autogenerated UpdateControllerGenerator
   * @param scopeAssignationApiDto
   * @return
   */
  private ScopeAssignationUpdateInput toDomainModel(ScopeAssignationApiDto scopeAssignationApiDto) {
    ScopeAssignationUpdateInput dto = new ScopeAssignationUpdateInput();
    if (null != scopeAssignationApiDto.getUid()) {
      dto.setUid(scopeAssignationApiDto.getUid());
    }
    if (null != scopeAssignationApiDto.getSecurityDomain()) {
      dto.setSecurityDomain(
          SecurityDomainReference.of(scopeAssignationApiDto.getSecurityDomain().get$Ref()));
    }
    if (null != scopeAssignationApiDto.getSecurityScope()) {
      dto.setSecurityScope(
          SecurityScopeReference.of(scopeAssignationApiDto.getSecurityScope().get$Ref()));
    }
    if (null != scopeAssignationApiDto.getVersion()) {
      dto.setVersion(scopeAssignationApiDto.getVersion());
    }
    return dto;
  }
}
