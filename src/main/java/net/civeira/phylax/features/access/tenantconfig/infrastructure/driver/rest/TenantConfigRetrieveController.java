package net.civeira.phylax.features.access.tenantconfig.infrastructure.driver.rest;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.common.infrastructure.CurrentRequest;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.retrieve.TenantConfigRetrieveProjection;
import net.civeira.phylax.features.access.tenantconfig.application.usecase.retrieve.TenantConfigRetrieveUsecase;
import net.civeira.phylax.features.access.tenantconfig.domain.TenantConfigReference;
import net.civeira.phylax.generated.openapi.model.TenantApiRef;
import net.civeira.phylax.generated.openapi.model.TenantConfigApiDto;

@RequiredArgsConstructor
public class TenantConfigRetrieveController {

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated RetrieveControllerGenerator
   */
  private final TenantConfigRetrieveUsecase retrieve;

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param uid
   * @return
   */
  public Response tenantConfigApiRetrieve(final String uid) {
    TenantConfigRetrieveProjection retrieved =
        retrieve.retrieve(currentRequest.interaction(), TenantConfigReference.of(uid));
    /* .header("Last-Modified", value.getSince().format(DateTimeFormatter.RFC_1123_DATE_TIME))) */
    return Response.ok(toApiModel(retrieved)).build();
  }

  /**
   * @autogenerated RetrieveControllerGenerator
   * @param dto
   * @return
   */
  private TenantConfigApiDto toApiModel(TenantConfigRetrieveProjection dto) {
    TenantConfigApiDto tenantConfigApiDto = new TenantConfigApiDto();
    tenantConfigApiDto.setUid(dto.getUid());
    tenantConfigApiDto.setTenant(new TenantApiRef().$ref(dto.getTenantReference()));
    tenantConfigApiDto.setInnerLabel(dto.getInnerLabel());
    tenantConfigApiDto.setForceMfa(dto.getForceMfa());
    tenantConfigApiDto.setVersion(dto.getVersion());
    return tenantConfigApiDto;
  }
}
