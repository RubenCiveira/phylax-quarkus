package net.civeira.phylax.features.access.useracceptedtermnsofuse;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.ToString;
import lombok.With;
import net.civeira.phylax.features.access.useracceptedtermnsofuse.valueobject.UidVO;

@Getter
@ToString
@RequiredArgsConstructor
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class UserAcceptedTermnsOfUseReference implements UserAcceptedTermnsOfUseRef {

  /**
   * @autogenerated EntityReferenceImplGenerator
   * @param uid
   * @return
   */
  public static UserAcceptedTermnsOfUseReference of(final String uid) {
    return new UserAcceptedTermnsOfUseReference(UidVO.from(uid));
  }

  /**
   * A uid string to identify the entity
   *
   * @autogenerated EntityReferenceImplGenerator
   */
  @EqualsAndHashCode.Include
  @NonNull
  private UidVO uid;

  /**
   * @autogenerated EntityReferenceImplGenerator
   * @return
   */
  public String getUidValue() {
    return getUid().getValue();
  }

  /**
   * @autogenerated EntityReferenceImplGenerator
   * @param uid
   * @return
   */
  public UserAcceptedTermnsOfUseReference withUidValue(final String uid) {
    return withUid(UidVO.from(uid));
  }
}
