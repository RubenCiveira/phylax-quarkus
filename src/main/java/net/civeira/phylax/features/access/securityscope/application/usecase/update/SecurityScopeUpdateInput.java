package net.civeira.phylax.features.access.securityscope.application.usecase.update;

import java.util.Optional;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import net.civeira.phylax.common.value.Uuid;
import net.civeira.phylax.features.access.relyingparty.domain.RelyingPartyRef;
import net.civeira.phylax.features.access.securityscope.domain.SecurityScopeChangeSet;
import net.civeira.phylax.features.access.securityscope.domain.SecurityScopeKindOptions;
import net.civeira.phylax.features.access.securityscope.domain.SecurityScopeVisibilityOptions;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.EnabledVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.KindVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.RelyingPartyVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.ResourceVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.ScopeVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.TrustedClientVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.UidVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.VersionVO;
import net.civeira.phylax.features.access.securityscope.domain.valueobject.VisibilityVO;
import net.civeira.phylax.features.access.trustedclient.domain.TrustedClientRef;

/**
 * A dto transfer to hold security scope attribute values
 */
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class SecurityScopeUpdateInput {

  /**
   * @autogenerated UpdateInputGenerator
   */
  public static class SecurityScopeUpdateInputBuilder {

    /**
     * Append Enabled crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param enabled The Enabled value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder enabled(final Boolean enabled) {
      return enabled(Optional.of(EnabledVO.from(enabled)));
    }

    /**
     * Append Enabled value
     *
     * @autogenerated UpdateInputGenerator
     * @param enabled The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder enabled(final Optional<EnabledVO> enabled) {
      this.enabled$value = enabled;
      this.enabled$set = true;
      return this;
    }

    /**
     * Append Kind crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param kind The Kind value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder kind(final SecurityScopeKindOptions kind) {
      return kind(Optional.of(KindVO.from(kind)));
    }

    /**
     * Append Kind value
     *
     * @autogenerated UpdateInputGenerator
     * @param kind The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder kind(final Optional<KindVO> kind) {
      this.kind$value = kind;
      this.kind$set = true;
      return this;
    }

    /**
     * @autogenerated UpdateInputGenerator
     * @return
     */
    public SecurityScopeUpdateInputBuilder newUid() {
      return version(0).uid(Uuid.comb().toString());
    }

    /**
     * Append RelyingParty crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param relyingParty The RelyingParty value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder relyingParty(final RelyingPartyRef relyingParty) {
      return relyingParty(Optional.of(RelyingPartyVO.from(relyingParty)));
    }

    /**
     * Append RelyingParty value
     *
     * @autogenerated UpdateInputGenerator
     * @param relyingParty The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder relyingParty(
        final Optional<RelyingPartyVO> relyingParty) {
      this.relyingParty$value = relyingParty;
      this.relyingParty$set = true;
      return this;
    }

    /**
     * Append Resource crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param resource The Resource value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder resource(final String resource) {
      return resource(Optional.of(ResourceVO.from(resource)));
    }

    /**
     * Append Resource value
     *
     * @autogenerated UpdateInputGenerator
     * @param resource The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder resource(final Optional<ResourceVO> resource) {
      this.resource$value = resource;
      this.resource$set = true;
      return this;
    }

    /**
     * Append Scope crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param scope The Scope value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder scope(final String scope) {
      return scope(Optional.of(ScopeVO.from(scope)));
    }

    /**
     * Append Scope value
     *
     * @autogenerated UpdateInputGenerator
     * @param scope The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder scope(final Optional<ScopeVO> scope) {
      this.scope$value = scope;
      this.scope$set = true;
      return this;
    }

    /**
     * Append TrustedClient crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param trustedClient The TrustedClient value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder trustedClient(final TrustedClientRef trustedClient) {
      return trustedClient(Optional.of(TrustedClientVO.from(trustedClient)));
    }

    /**
     * Append TrustedClient value
     *
     * @autogenerated UpdateInputGenerator
     * @param trustedClient The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder trustedClient(
        final Optional<TrustedClientVO> trustedClient) {
      this.trustedClient$value = trustedClient;
      this.trustedClient$set = true;
      return this;
    }

    /**
     * Append Uid crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param uid The Uid value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder uid(final String uid) {
      return uid(Optional.of(UidVO.from(uid)));
    }

    /**
     * Append Uid value
     *
     * @autogenerated UpdateInputGenerator
     * @param uid The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder uid(final Optional<UidVO> uid) {
      this.uid$value = uid;
      this.uid$set = true;
      return this;
    }

    /**
     * Append Version crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param version The Version value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder version(final Integer version) {
      return version(Optional.of(VersionVO.from(version)));
    }

    /**
     * Append Version value
     *
     * @autogenerated UpdateInputGenerator
     * @param version The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder version(final Optional<VersionVO> version) {
      this.version$value = version;
      this.version$set = true;
      return this;
    }

    /**
     * Append Visibility crud value and convert as value object.
     *
     * @autogenerated UpdateInputGenerator
     * @param visibility The Visibility value to wrap in a value object.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder visibility(
        final SecurityScopeVisibilityOptions visibility) {
      return visibility(Optional.of(VisibilityVO.from(visibility)));
    }

    /**
     * Append Visibility value
     *
     * @autogenerated UpdateInputGenerator
     * @param visibility The value object with the information.
     * @return Self instance to continue with a flow build
     */
    public SecurityScopeUpdateInputBuilder visibility(final Optional<VisibilityVO> visibility) {
      this.visibility$value = visibility;
      this.visibility$set = true;
      return this;
    }
  }

  /**
   * @autogenerated UpdateInputGenerator
   * @param input
   * @return
   */
  static SecurityScopeUpdateInput fromChangeSet(final SecurityScopeChangeSet input) {
    return SecurityScopeUpdateInput.builder().uid(input.getUid())
        .trustedClient(input.getTrustedClient()).relyingParty(input.getRelyingParty())
        .resource(input.getResource()).scope(input.getScope()).enabled(input.getEnabled())
        .kind(input.getKind()).visibility(input.getVisibility()).version(input.getVersion())
        .build();
  }

  /**
   * El enabled de security scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<EnabledVO> enabled = Optional.empty();

  /**
   * El kind de security scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<KindVO> kind = Optional.empty();

  /**
   * El relying party de security scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<RelyingPartyVO> relyingParty = Optional.empty();

  /**
   * A label group key to show the scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<ResourceVO> resource = Optional.empty();

  /**
   * A label to show the scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<ScopeVO> scope = Optional.empty();

  /**
   * El trusted client de security scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<TrustedClientVO> trustedClient = Optional.empty();

  /**
   * A uid string to identify the entity
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<UidVO> uid = Optional.empty();

  /**
   * Campo con el número de version de security scope para controlar bloqueos optimistas
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<VersionVO> version = Optional.empty();

  /**
   * El visibility de security scope
   *
   * @autogenerated UpdateInputGenerator
   */
  @Builder.Default
  private Optional<VisibilityVO> visibility = Optional.empty();

  /**
   * Inform for a possible change propolsal in Enabled
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Enabled, otherwise the value for Enabled
   */
  public Optional<EnabledVO> getEnabled() {
    return enabled;
  }

  /**
   * Inform for a possible change propolsal in Kind
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Kind, otherwise the value for Kind
   */
  public Optional<KindVO> getKind() {
    return kind;
  }

  /**
   * Inform for a possible change propolsal in RelyingParty
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for RelyingParty, otherwise the value for
   *         RelyingParty
   */
  public Optional<RelyingPartyVO> getRelyingParty() {
    return relyingParty;
  }

  /**
   * Inform for a possible change propolsal in Resource
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Resource, otherwise the value for Resource
   */
  public Optional<ResourceVO> getResource() {
    return resource;
  }

  /**
   * Inform for a possible change propolsal in Scope
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Scope, otherwise the value for Scope
   */
  public Optional<ScopeVO> getScope() {
    return scope;
  }

  /**
   * Inform for a possible change propolsal in TrustedClient
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for TrustedClient, otherwise the value for
   *         TrustedClient
   */
  public Optional<TrustedClientVO> getTrustedClient() {
    return trustedClient;
  }

  /**
   * Inform for a possible change propolsal in Uid
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Uid, otherwise the value for Uid
   */
  public Optional<UidVO> getUid() {
    return uid;
  }

  /**
   * Inform for a possible change propolsal in Version
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Version, otherwise the value for Version
   */
  public Optional<VersionVO> getVersion() {
    return version;
  }

  /**
   * Inform for a possible change propolsal in Visibility
   *
   * @autogenerated UpdateInputGenerator
   * @return empty if there is no change proposal for Visibility, otherwise the value for Visibility
   */
  public Optional<VisibilityVO> getVisibility() {
    return visibility;
  }

  /**
   * Assigna change proposal for Enabled to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setEnabled(final Boolean value) {
    this.enabled = Optional.of(EnabledVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Kind to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setKind(final SecurityScopeKindOptions value) {
    this.kind = Optional.of(KindVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for RelyingParty to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setRelyingParty(final RelyingPartyRef value) {
    this.relyingParty = Optional.of(RelyingPartyVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Resource to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setResource(final String value) {
    this.resource = Optional.of(ResourceVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Scope to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setScope(final String value) {
    this.scope = Optional.of(ScopeVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for TrustedClient to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setTrustedClient(final TrustedClientRef value) {
    this.trustedClient = Optional.of(TrustedClientVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Uid to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setUid(final String value) {
    this.uid = Optional.of(UidVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Version to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setVersion(final Integer value) {
    this.version = Optional.of(VersionVO.from(value));
    return this;
  }

  /**
   * Assigna change proposal for Visibility to be apply for the aggregate.
   *
   * @autogenerated UpdateInputGenerator
   * @param value The proposal value for SecurityScopeUpdateInput
   * @return self instance to enable a flow code
   */
  public SecurityScopeUpdateInput setVisibility(final SecurityScopeVisibilityOptions value) {
    this.visibility = Optional.of(VisibilityVO.from(value));
    return this;
  }

  /**
   * @autogenerated UpdateInputGenerator
   * @return
   */
  SecurityScopeChangeSet toChangeSet() {
    return SecurityScopeChangeSet.builder().uid(uid).trustedClient(trustedClient)
        .relyingParty(relyingParty).resource(resource).scope(scope).enabled(enabled).kind(kind)
        .visibility(visibility).version(version).build();
  }
}
