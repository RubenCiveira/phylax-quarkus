package net.civeira.phylax.features.access.securityscope.infrastructure.driver.rest;

import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.SecurityScopeApi;
import net.civeira.phylax.generated.openapi.model.SecurityScopeApiDto;

@RequiredArgsConstructor
public class SecurityScopeController implements SecurityScopeApi {

  /**
   * SecurityScopeApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeCreateController createController;

  /**
   * SecurityScope
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeDeleteController deleteController;

  /**
   * Disable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeDisableController disableController;

  /**
   * Enable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeEnableController enableController;

  /**
   * SecurityScope
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeListController listController;

  /**
   * SecurityScope
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeRetrieveController retrieveController;

  /**
   * SecurityScopeApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityScopeUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param resource
   * @param trustedClient
   * @param trustedClients
   * @param relyingParty
   * @param relyingPartys
   * @return
   */
  @Override
  public Response securityScopeApiBatchDelete(final List<String> uids, final String search,
      final String resource, final String trustedClient, final List<String> trustedClients,
      final String relyingParty, final List<String> relyingPartys) {
    return deleteController.securityScopeApiBatchDelete(uids, search, resource, trustedClient,
        trustedClients, relyingParty, relyingPartys);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response securityScopeApiBatchDeleteQuery(final String batchId) {
    return deleteController.securityScopeApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param resource
   * @param trustedClient
   * @param trustedClients
   * @param relyingParty
   * @param relyingPartys
   * @return
   */
  @Override
  public Response securityScopeApiBatchDisable(final List<String> uids, final String search,
      final String resource, final String trustedClient, final List<String> trustedClients,
      final String relyingParty, final List<String> relyingPartys) {
    return disableController.securityScopeApiBatchDisable(uids, search, resource, trustedClient,
        trustedClients, relyingParty, relyingPartys);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response securityScopeApiBatchDisableQuery(final String batchId) {
    return disableController.securityScopeApiBatchDisableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param resource
   * @param trustedClient
   * @param trustedClients
   * @param relyingParty
   * @param relyingPartys
   * @return
   */
  @Override
  public Response securityScopeApiBatchEnable(final List<String> uids, final String search,
      final String resource, final String trustedClient, final List<String> trustedClients,
      final String relyingParty, final List<String> relyingPartys) {
    return enableController.securityScopeApiBatchEnable(uids, search, resource, trustedClient,
        trustedClients, relyingParty, relyingPartys);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response securityScopeApiBatchEnableQuery(final String batchId) {
    return enableController.securityScopeApiBatchEnableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param securityScope
   * @return
   */
  @Override
  public Response securityScopeApiCreate(SecurityScopeApiDto securityScope) {
    return createController.securityScopeApiCreate(securityScope);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityScopeApiDelete(final String uid) {
    return deleteController.securityScopeApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityScopeApiDisable(final String uid) {
    return disableController.securityScopeApiDisable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityScopeApiEnable(final String uid) {
    return enableController.securityScopeApiEnable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param resource
   * @param trustedClient
   * @param trustedClients
   * @param relyingParty
   * @param relyingPartys
   * @param limit
   * @param sinceUid
   * @return
   */
  @Override
  public Response securityScopeApiList(final List<String> uids, final String search,
      final String resource, final String trustedClient, final List<String> trustedClients,
      final String relyingParty, final List<String> relyingPartys, final Integer limit,
      final String sinceUid) {
    return listController.securityScopeApiList(uids, search, resource, trustedClient,
        trustedClients, relyingParty, relyingPartys, limit, sinceUid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityScopeApiRetrieve(final String uid) {
    return retrieveController.securityScopeApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param securityScope
   * @return
   */
  @Override
  public Response securityScopeApiUpdate(final String uid, SecurityScopeApiDto securityScope) {
    return updateController.securityScopeApiUpdate(uid, securityScope);
  }
}
