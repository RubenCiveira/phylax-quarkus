package net.civeira.phylax.features.access.securitydomain.infrastructure.driver.rest;

import java.util.List;

import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;
import net.civeira.phylax.generated.openapi.api.SecurityDomainApi;
import net.civeira.phylax.generated.openapi.model.SecurityDomainApiDto;

@RequiredArgsConstructor
public class SecurityDomainController implements SecurityDomainApi {

  /**
   * SecurityDomainApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainCreateController createController;

  /**
   * SecurityDomain
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainDeleteController deleteController;

  /**
   * Disable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainDisableController disableController;

  /**
   * Enable
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainEnableController enableController;

  /**
   * SecurityDomain
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainListController listController;

  /**
   * SecurityDomain
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainRetrieveController retrieveController;

  /**
   * SecurityDomainApiDto
   *
   * @autogenerated ApiControllerGenerator
   */
  private final SecurityDomainUpdateController updateController;

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param enabled
   * @param name
   * @return
   */
  @Override
  public Response securityDomainApiBatchDelete(final List<String> uids, final String search,
      final Boolean enabled, final String name) {
    return deleteController.securityDomainApiBatchDelete(uids, search, enabled, name);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response securityDomainApiBatchDeleteQuery(final String batchId) {
    return deleteController.securityDomainApiBatchDeleteQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param enabled
   * @param name
   * @return
   */
  @Override
  public Response securityDomainApiBatchDisable(final List<String> uids, final String search,
      final Boolean enabled, final String name) {
    return disableController.securityDomainApiBatchDisable(uids, search, enabled, name);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response securityDomainApiBatchDisableQuery(final String batchId) {
    return disableController.securityDomainApiBatchDisableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param enabled
   * @param name
   * @return
   */
  @Override
  public Response securityDomainApiBatchEnable(final List<String> uids, final String search,
      final Boolean enabled, final String name) {
    return enableController.securityDomainApiBatchEnable(uids, search, enabled, name);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param batchId
   * @return
   */
  @Override
  public Response securityDomainApiBatchEnableQuery(final String batchId) {
    return enableController.securityDomainApiBatchEnableQuery(batchId);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param securityDomain
   * @return
   */
  @Override
  public Response securityDomainApiCreate(SecurityDomainApiDto securityDomain) {
    return createController.securityDomainApiCreate(securityDomain);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityDomainApiDelete(final String uid) {
    return deleteController.securityDomainApiDelete(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityDomainApiDisable(final String uid) {
    return disableController.securityDomainApiDisable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityDomainApiEnable(final String uid) {
    return enableController.securityDomainApiEnable(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uids
   * @param search
   * @param enabled
   * @param name
   * @param limit
   * @param sinceUid
   * @param sinceName
   * @param order
   * @return
   */
  @Override
  public Response securityDomainApiList(final List<String> uids, final String search,
      final Boolean enabled, final String name, final Integer limit, final String sinceUid,
      final String sinceName, final String order) {
    return listController.securityDomainApiList(uids, search, enabled, name, limit, sinceUid,
        sinceName, order);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response securityDomainApiRetrieve(final String uid) {
    return retrieveController.securityDomainApiRetrieve(uid);
  }

  /**
   * @autogenerated ApiControllerGenerator
   * @param uid
   * @param securityDomain
   * @return
   */
  @Override
  public Response securityDomainApiUpdate(final String uid, SecurityDomainApiDto securityDomain) {
    return updateController.securityDomainApiUpdate(uid, securityDomain);
  }
}
